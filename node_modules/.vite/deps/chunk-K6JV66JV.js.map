{
  "version": 3,
  "sources": ["../../eventemitter3/index.js", "../../ethers/src.ts/utils.ts", "../../@wagmi/connectors/dist/chunk-5NCTPR6C.js", "../../@wagmi/connectors/dist/index.js", "../../@wagmi/core/dist/chunk-BVC4KGLQ.js", "../../@wagmi/connectors/dist/injected.js", "../../@wagmi/connectors/dist/chunk-CYQSS77O.js", "../../@wagmi/core/dist/index.js", "../../@wagmi/core/dist/chunk-KX4UEHS5.js", "../../@wagmi/core/dist/chunk-55IO54NW.js", "../../zustand/esm/middleware.mjs", "../../zustand/esm/vanilla.mjs", "../../zustand/esm/shallow.mjs", "../../@wagmi/core/dist/chunk-EQOEZP46.js"],
  "sourcesContent": ["'use strict';\r\n\r\nvar has = Object.prototype.hasOwnProperty\r\n  , prefix = '~';\r\n\r\n/**\r\n * Constructor to create a storage for our `EE` objects.\r\n * An `Events` instance is a plain object whose properties are event names.\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nfunction Events() {}\r\n\r\n//\r\n// We try to not inherit from `Object.prototype`. In some engines creating an\r\n// instance in this way is faster than calling `Object.create(null)` directly.\r\n// If `Object.create(null)` is not supported we prefix the event names with a\r\n// character to make sure that the built-in object properties are not\r\n// overridden or used as an attack vector.\r\n//\r\nif (Object.create) {\r\n  Events.prototype = Object.create(null);\r\n\r\n  //\r\n  // This hack is needed because the `__proto__` property is still inherited in\r\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\r\n  //\r\n  if (!new Events().__proto__) prefix = false;\r\n}\r\n\r\n/**\r\n * Representation of a single event listener.\r\n *\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\r\n * @constructor\r\n * @private\r\n */\r\nfunction EE(fn, context, once) {\r\n  this.fn = fn;\r\n  this.context = context;\r\n  this.once = once || false;\r\n}\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} once Specify if the listener is a one-time listener.\r\n * @returns {EventEmitter}\r\n * @private\r\n */\r\nfunction addListener(emitter, event, fn, context, once) {\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('The listener must be a function');\r\n  }\r\n\r\n  var listener = new EE(fn, context || emitter, once)\r\n    , evt = prefix ? prefix + event : event;\r\n\r\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\r\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\r\n  else emitter._events[evt] = [emitter._events[evt], listener];\r\n\r\n  return emitter;\r\n}\r\n\r\n/**\r\n * Clear event by name.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} evt The Event name.\r\n * @private\r\n */\r\nfunction clearEvent(emitter, evt) {\r\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\r\n  else delete emitter._events[evt];\r\n}\r\n\r\n/**\r\n * Minimal `EventEmitter` interface that is molded against the Node.js\r\n * `EventEmitter` interface.\r\n *\r\n * @constructor\r\n * @public\r\n */\r\nfunction EventEmitter() {\r\n  this._events = new Events();\r\n  this._eventsCount = 0;\r\n}\r\n\r\n/**\r\n * Return an array listing the events for which the emitter has registered\r\n * listeners.\r\n *\r\n * @returns {Array}\r\n * @public\r\n */\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  var names = []\r\n    , events\r\n    , name;\r\n\r\n  if (this._eventsCount === 0) return names;\r\n\r\n  for (name in (events = this._events)) {\r\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\r\n  }\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    return names.concat(Object.getOwnPropertySymbols(events));\r\n  }\r\n\r\n  return names;\r\n};\r\n\r\n/**\r\n * Return the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Array} The registered listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listeners = function listeners(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , handlers = this._events[evt];\r\n\r\n  if (!handlers) return [];\r\n  if (handlers.fn) return [handlers.fn];\r\n\r\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n    ee[i] = handlers[i].fn;\r\n  }\r\n\r\n  return ee;\r\n};\r\n\r\n/**\r\n * Return the number of listeners listening to a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Number} The number of listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , listeners = this._events[evt];\r\n\r\n  if (!listeners) return 0;\r\n  if (listeners.fn) return 1;\r\n  return listeners.length;\r\n};\r\n\r\n/**\r\n * Calls each of the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Boolean} `true` if the event had listeners, else `false`.\r\n * @public\r\n */\r\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return false;\r\n\r\n  var listeners = this._events[evt]\r\n    , len = arguments.length\r\n    , args\r\n    , i;\r\n\r\n  if (listeners.fn) {\r\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\r\n\r\n    switch (len) {\r\n      case 1: return listeners.fn.call(listeners.context), true;\r\n      case 2: return listeners.fn.call(listeners.context, a1), true;\r\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\r\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\r\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\r\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\r\n    }\r\n\r\n    for (i = 1, args = new Array(len -1); i < len; i++) {\r\n      args[i - 1] = arguments[i];\r\n    }\r\n\r\n    listeners.fn.apply(listeners.context, args);\r\n  } else {\r\n    var length = listeners.length\r\n      , j;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\r\n\r\n      switch (len) {\r\n        case 1: listeners[i].fn.call(listeners[i].context); break;\r\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\r\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\r\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\r\n        default:\r\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\r\n            args[j - 1] = arguments[j];\r\n          }\r\n\r\n          listeners[i].fn.apply(listeners[i].context, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.on = function on(event, fn, context) {\r\n  return addListener(this, event, fn, context, false);\r\n};\r\n\r\n/**\r\n * Add a one-time listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.once = function once(event, fn, context) {\r\n  return addListener(this, event, fn, context, true);\r\n};\r\n\r\n/**\r\n * Remove the listeners of a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn Only remove the listeners that match this function.\r\n * @param {*} context Only remove the listeners that have this context.\r\n * @param {Boolean} once Only remove one-time listeners.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return this;\r\n  if (!fn) {\r\n    clearEvent(this, evt);\r\n    return this;\r\n  }\r\n\r\n  var listeners = this._events[evt];\r\n\r\n  if (listeners.fn) {\r\n    if (\r\n      listeners.fn === fn &&\r\n      (!once || listeners.once) &&\r\n      (!context || listeners.context === context)\r\n    ) {\r\n      clearEvent(this, evt);\r\n    }\r\n  } else {\r\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n      if (\r\n        listeners[i].fn !== fn ||\r\n        (once && !listeners[i].once) ||\r\n        (context && listeners[i].context !== context)\r\n      ) {\r\n        events.push(listeners[i]);\r\n      }\r\n    }\r\n\r\n    //\r\n    // Reset the array, or remove it completely if we have no more listeners.\r\n    //\r\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\r\n    else clearEvent(this, evt);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all listeners, or those of the specified event.\r\n *\r\n * @param {(String|Symbol)} [event] The event name.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\r\n  var evt;\r\n\r\n  if (event) {\r\n    evt = prefix ? prefix + event : event;\r\n    if (this._events[evt]) clearEvent(this, evt);\r\n  } else {\r\n    this._events = new Events();\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n//\r\n// Alias methods names because people roll like that.\r\n//\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n//\r\n// Expose the prefix.\r\n//\r\nEventEmitter.prefixed = prefix;\r\n\r\n//\r\n// Allow `EventEmitter` to be imported as module namespace.\r\n//\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\n//\r\n// Expose the module.\r\n//\r\nif ('undefined' !== typeof module) {\r\n  module.exports = EventEmitter;\r\n}\r\n", "\"use strict\";\r\n\r\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\r\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\r\nimport * as base64 from \"@ethersproject/base64\";\r\nimport { Base58 as base58 } from \"@ethersproject/basex\";\r\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\r\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\r\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\r\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\r\nimport { keccak256 } from \"@ethersproject/keccak256\";\r\nimport { Logger } from \"@ethersproject/logger\";\r\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\r\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\r\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\r\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\r\nimport * as RLP from \"@ethersproject/rlp\";\r\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\r\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\r\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\r\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\r\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\r\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\r\n\r\n////////////////////////\r\n// Enums\r\n\r\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\r\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\r\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\r\n\r\n////////////////////////\r\n// Types and Interfaces\r\n\r\nimport { CoerceFunc } from \"@ethersproject/abi\";\r\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\r\nimport { Mnemonic } from \"@ethersproject/hdnode\";\r\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\r\nimport { Deferrable } from \"@ethersproject/properties\";\r\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\r\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\r\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\r\n\r\n////////////////////////\r\n// Exports\r\n\r\nexport {\r\n    AbiCoder,\r\n    defaultAbiCoder,\r\n\r\n    Fragment,\r\n    ConstructorFragment,\r\n    ErrorFragment,\r\n    EventFragment,\r\n    FunctionFragment,\r\n    ParamType,\r\n    FormatTypes,\r\n\r\n    checkResultErrors,\r\n    Result,\r\n\r\n    Logger,\r\n\r\n    RLP,\r\n\r\n    _fetchData,\r\n    fetchJson,\r\n    poll,\r\n\r\n    checkProperties,\r\n    deepCopy,\r\n    defineReadOnly,\r\n    getStatic,\r\n    resolveProperties,\r\n    shallowCopy,\r\n\r\n    arrayify,\r\n\r\n    concat,\r\n    stripZeros,\r\n    zeroPad,\r\n\r\n    isBytes,\r\n    isBytesLike,\r\n\r\n    defaultPath,\r\n    HDNode,\r\n    SigningKey,\r\n\r\n    Interface,\r\n\r\n    LogDescription,\r\n    TransactionDescription,\r\n\r\n    base58,\r\n    base64,\r\n\r\n    hexlify,\r\n    isHexString,\r\n    hexConcat,\r\n    hexStripZeros,\r\n    hexValue,\r\n    hexZeroPad,\r\n    hexDataLength,\r\n    hexDataSlice,\r\n\r\n    nameprep,\r\n    _toEscapedUtf8String,\r\n    toUtf8Bytes,\r\n    toUtf8CodePoints,\r\n    toUtf8String,\r\n    Utf8ErrorFuncs,\r\n\r\n    formatBytes32String,\r\n    parseBytes32String,\r\n\r\n    dnsEncode,\r\n    hashMessage,\r\n    namehash,\r\n    isValidName,\r\n    id,\r\n\r\n    _TypedDataEncoder,\r\n\r\n    getAddress,\r\n    getIcapAddress,\r\n    getContractAddress,\r\n    getCreate2Address,\r\n    isAddress,\r\n\r\n    formatEther,\r\n    parseEther,\r\n\r\n    formatUnits,\r\n    parseUnits,\r\n\r\n    commify,\r\n\r\n    computeHmac,\r\n    keccak256,\r\n    ripemd160,\r\n    sha256,\r\n    sha512,\r\n\r\n    randomBytes,\r\n    shuffled,\r\n\r\n    solidityPack,\r\n    solidityKeccak256,\r\n    soliditySha256,\r\n\r\n    splitSignature,\r\n    joinSignature,\r\n\r\n    accessListify,\r\n    parseTransaction,\r\n    serializeTransaction,\r\n    TransactionTypes,\r\n\r\n    getJsonWalletAddress,\r\n\r\n    computeAddress,\r\n    recoverAddress,\r\n\r\n    computePublicKey,\r\n    recoverPublicKey,\r\n\r\n    verifyMessage,\r\n    verifyTypedData,\r\n\r\n    getAccountPath,\r\n    mnemonicToEntropy,\r\n    entropyToMnemonic,\r\n    isValidMnemonic,\r\n    mnemonicToSeed,\r\n\r\n\r\n    ////////////////////////\r\n    // Enums\r\n\r\n    SupportedAlgorithm,\r\n\r\n    UnicodeNormalizationForm,\r\n    Utf8ErrorReason,\r\n\r\n    ////////////////////////\r\n    // Types\r\n\r\n    Bytes,\r\n    BytesLike,\r\n    Hexable,\r\n\r\n    AccessList,\r\n    AccessListish,\r\n    UnsignedTransaction,\r\n\r\n    CoerceFunc,\r\n\r\n    Indexed,\r\n\r\n    Mnemonic,\r\n\r\n    Deferrable,\r\n\r\n    Utf8ErrorFunc,\r\n\r\n    ConnectionInfo,\r\n    OnceBlockable,\r\n    OncePollable,\r\n    PollOptions,\r\n    FetchJsonResponse,\r\n\r\n    EncryptOptions,\r\n    ProgressCallback\r\n}\r\n\r\n", "var __defProp = Object.defineProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar __accessCheck = (obj, member, msg) => {\r\n  if (!member.has(obj))\r\n    throw TypeError(\"Cannot \" + msg);\r\n};\r\nvar __privateGet = (obj, member, getter) => {\r\n  __accessCheck(obj, member, \"read from private field\");\r\n  return getter ? getter.call(obj) : member.get(obj);\r\n};\r\nvar __privateAdd = (obj, member, value) => {\r\n  if (member.has(obj))\r\n    throw TypeError(\"Cannot add the same private member more than once\");\r\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\r\n};\r\nvar __privateSet = (obj, member, value, setter) => {\r\n  __accessCheck(obj, member, \"write to private field\");\r\n  setter ? setter.call(obj, value) : member.set(obj, value);\r\n  return value;\r\n};\r\nvar __privateMethod = (obj, member, method) => {\r\n  __accessCheck(obj, member, \"access private method\");\r\n  return method;\r\n};\r\n\r\n// src/base.ts\r\nimport { goerli, mainnet } from \"@wagmi/core/chains\";\r\nimport { default as EventEmitter } from \"eventemitter3\";\r\nvar Connector = class extends EventEmitter {\r\n  constructor({\r\n    chains = [mainnet, goerli],\r\n    options\r\n  }) {\r\n    super();\r\n    __publicField(this, \"chains\");\r\n    __publicField(this, \"options\");\r\n    this.chains = chains;\r\n    this.options = options;\r\n  }\r\n  getBlockExplorerUrls(chain) {\r\n    const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\r\n    if (blockExplorer)\r\n      return [\r\n        blockExplorer.url,\r\n        ...Object.values(blockExplorers).map((x) => x.url)\r\n      ];\r\n  }\r\n  isChainUnsupported(chainId) {\r\n    return !this.chains.some((x) => x.id === chainId);\r\n  }\r\n};\r\n\r\nexport {\r\n  __publicField,\r\n  __privateGet,\r\n  __privateAdd,\r\n  __privateSet,\r\n  __privateMethod,\r\n  Connector\r\n};\r\n", "import {\r\n  Connector\r\n} from \"./chunk-5NCTPR6C.js\";\r\nexport {\r\n  Connector\r\n};\r\n", "// src/connectors/index.ts\r\nimport { Connector } from \"@wagmi/connectors\";\r\nimport { InjectedConnector } from \"@wagmi/connectors/injected\";\r\n\r\nexport {\r\n  Connector,\r\n  InjectedConnector\r\n};\r\n", "import {\r\n  InjectedConnector\r\n} from \"./chunk-CYQSS77O.js\";\r\nimport \"./chunk-5NCTPR6C.js\";\r\nexport {\r\n  InjectedConnector\r\n};\r\n", "import {\r\n  Connector,\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateSet,\r\n  __publicField\r\n} from \"./chunk-5NCTPR6C.js\";\r\n\r\n// src/injected.ts\r\nimport {\r\n  AddChainError,\r\n  ChainNotConfiguredError,\r\n  ConnectorNotFoundError,\r\n  ResourceUnavailableError,\r\n  SwitchChainError,\r\n  UserRejectedRequestError,\r\n  getClient,\r\n  normalizeChainId\r\n} from \"@wagmi/core\";\r\nimport { providers } from \"ethers\";\r\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\r\n\r\n// src/utils/getInjectedName.ts\r\nfunction getInjectedName(ethereum) {\r\n  if (!ethereum)\r\n    return \"Injected\";\r\n  const getName = (provider) => {\r\n    if (provider.isApexWallet)\r\n      return \"Apex Wallet\";\r\n    if (provider.isAvalanche)\r\n      return \"Core Wallet\";\r\n    if (provider.isBitKeep)\r\n      return \"BitKeep\";\r\n    if (provider.isBitski)\r\n      return \"Bitski\";\r\n    if (provider.isBraveWallet)\r\n      return \"Brave Wallet\";\r\n    if (provider.isCoinbaseWallet)\r\n      return \"Coinbase Wallet\";\r\n    if (provider.isExodus)\r\n      return \"Exodus\";\r\n    if (provider.isFrame)\r\n      return \"Frame\";\r\n    if (provider.isFrontier)\r\n      return \"Frontier Wallet\";\r\n    if (provider.isKuCoinWallet)\r\n      return \"KuCoin Wallet\";\r\n    if (provider.isMathWallet)\r\n      return \"MathWallet\";\r\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\r\n      return \"1inch Wallet\";\r\n    if (provider.isOpera)\r\n      return \"Opera\";\r\n    if (provider.isPortal)\r\n      return \"Ripio Portal\";\r\n    if (provider.isRainbow)\r\n      return \"Rainbow\";\r\n    if (provider.isTally)\r\n      return \"Tally\";\r\n    if (provider.isTokenPocket)\r\n      return \"TokenPocket\";\r\n    if (provider.isTokenary)\r\n      return \"Tokenary\";\r\n    if (provider.isTrust || provider.isTrustWallet)\r\n      return \"Trust Wallet\";\r\n    if (provider.isHyperPay)\r\n      return \"HyperPay Wallet\";\r\n    if (provider.isMetaMask)\r\n      return \"MetaMask\";\r\n    if (provider.isXDEFI)\r\n      return \"XDEFI Wallet\";\r\n  };\r\n  if (ethereum.providers?.length) {\r\n    const nameSet = /* @__PURE__ */ new Set();\r\n    let unknownCount = 1;\r\n    for (const provider of ethereum.providers) {\r\n      let name = getName(provider);\r\n      if (!name) {\r\n        name = `Unknown Wallet #${unknownCount}`;\r\n        unknownCount += 1;\r\n      }\r\n      nameSet.add(name);\r\n    }\r\n    const names = [...nameSet];\r\n    if (names.length)\r\n      return names;\r\n    return names[0] ?? \"Injected\";\r\n  }\r\n  return getName(ethereum) ?? \"Injected\";\r\n}\r\n\r\n// src/injected.ts\r\nvar _provider, _switchingChains;\r\nvar InjectedConnector = class extends Connector {\r\n  constructor({\r\n    chains,\r\n    options: options_\r\n  } = {}) {\r\n    const options = {\r\n      shimDisconnect: true,\r\n      shimChainChangedDisconnect: true,\r\n      getProvider: () => typeof window !== \"undefined\" ? window.ethereum : void 0,\r\n      ...options_\r\n    };\r\n    super({ chains, options });\r\n    __publicField(this, \"id\", \"injected\");\r\n    __publicField(this, \"name\");\r\n    __publicField(this, \"ready\");\r\n    __privateAdd(this, _provider, void 0);\r\n    __privateAdd(this, _switchingChains, void 0);\r\n    __publicField(this, \"shimDisconnectKey\", `${this.id}.shimDisconnect`);\r\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\r\n      if (accounts.length === 0)\r\n        this.emit(\"disconnect\");\r\n      else\r\n        this.emit(\"change\", {\r\n          account: getAddress(accounts[0])\r\n        });\r\n    });\r\n    __publicField(this, \"onChainChanged\", (chainId) => {\r\n      const id = normalizeChainId(chainId);\r\n      const unsupported = this.isChainUnsupported(id);\r\n      this.emit(\"change\", { chain: { id, unsupported } });\r\n    });\r\n    __publicField(this, \"onDisconnect\", () => {\r\n      if (this.options.shimChainChangedDisconnect && __privateGet(this, _switchingChains)) {\r\n        __privateSet(this, _switchingChains, false);\r\n        return;\r\n      }\r\n      this.emit(\"disconnect\");\r\n      if (this.options.shimDisconnect)\r\n        getClient().storage?.removeItem(this.shimDisconnectKey);\r\n    });\r\n    const provider = options.getProvider();\r\n    if (typeof options.name === \"string\")\r\n      this.name = options.name;\r\n    else if (provider) {\r\n      const detectedName = getInjectedName(provider);\r\n      if (options.name)\r\n        this.name = options.name(detectedName);\r\n      else {\r\n        if (typeof detectedName === \"string\")\r\n          this.name = detectedName;\r\n        else\r\n          this.name = detectedName[0];\r\n      }\r\n    } else\r\n      this.name = \"Injected\";\r\n    this.ready = !!provider;\r\n  }\r\n  async connect({ chainId } = {}) {\r\n    try {\r\n      const provider = await this.getProvider();\r\n      if (!provider)\r\n        throw new ConnectorNotFoundError();\r\n      if (provider.on) {\r\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\r\n        provider.on(\"chainChanged\", this.onChainChanged);\r\n        provider.on(\"disconnect\", this.onDisconnect);\r\n      }\r\n      this.emit(\"message\", { type: \"connecting\" });\r\n      const accounts = await provider.request({\r\n        method: \"eth_requestAccounts\"\r\n      });\r\n      const account = getAddress(accounts[0]);\r\n      let id = await this.getChainId();\r\n      let unsupported = this.isChainUnsupported(id);\r\n      if (chainId && id !== chainId) {\r\n        const chain = await this.switchChain(chainId);\r\n        id = chain.id;\r\n        unsupported = this.isChainUnsupported(id);\r\n      }\r\n      if (this.options.shimDisconnect)\r\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\r\n      return { account, chain: { id, unsupported }, provider };\r\n    } catch (error) {\r\n      if (this.isUserRejectedRequestError(error))\r\n        throw new UserRejectedRequestError(error);\r\n      if (error.code === -32002)\r\n        throw new ResourceUnavailableError(error);\r\n      throw error;\r\n    }\r\n  }\r\n  async disconnect() {\r\n    const provider = await this.getProvider();\r\n    if (!provider?.removeListener)\r\n      return;\r\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\r\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\r\n    provider.removeListener(\"disconnect\", this.onDisconnect);\r\n    if (this.options.shimDisconnect)\r\n      getClient().storage?.removeItem(this.shimDisconnectKey);\r\n  }\r\n  async getAccount() {\r\n    const provider = await this.getProvider();\r\n    if (!provider)\r\n      throw new ConnectorNotFoundError();\r\n    const accounts = await provider.request({\r\n      method: \"eth_accounts\"\r\n    });\r\n    return getAddress(accounts[0]);\r\n  }\r\n  async getChainId() {\r\n    const provider = await this.getProvider();\r\n    if (!provider)\r\n      throw new ConnectorNotFoundError();\r\n    return provider.request({ method: \"eth_chainId\" }).then(normalizeChainId);\r\n  }\r\n  async getProvider() {\r\n    const provider = this.options.getProvider();\r\n    if (provider)\r\n      __privateSet(this, _provider, provider);\r\n    return __privateGet(this, _provider);\r\n  }\r\n  async getSigner({ chainId } = {}) {\r\n    const [provider, account] = await Promise.all([\r\n      this.getProvider(),\r\n      this.getAccount()\r\n    ]);\r\n    return new providers.Web3Provider(\r\n      provider,\r\n      chainId\r\n    ).getSigner(account);\r\n  }\r\n  async isAuthorized() {\r\n    try {\r\n      if (this.options.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey))\r\n        return false;\r\n      const provider = await this.getProvider();\r\n      if (!provider)\r\n        throw new ConnectorNotFoundError();\r\n      const account = await this.getAccount();\r\n      return !!account;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  async switchChain(chainId) {\r\n    if (this.options.shimChainChangedDisconnect)\r\n      __privateSet(this, _switchingChains, true);\r\n    const provider = await this.getProvider();\r\n    if (!provider)\r\n      throw new ConnectorNotFoundError();\r\n    const id = hexValue(chainId);\r\n    try {\r\n      await Promise.all([\r\n        provider.request({\r\n          method: \"wallet_switchEthereumChain\",\r\n          params: [{ chainId: id }]\r\n        }),\r\n        new Promise(\r\n          (res) => this.on(\"change\", ({ chain }) => {\r\n            if (chain?.id === chainId)\r\n              res();\r\n          })\r\n        )\r\n      ]);\r\n      return this.chains.find((x) => x.id === chainId) ?? {\r\n        id: chainId,\r\n        name: `Chain ${id}`,\r\n        network: `${id}`,\r\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\r\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\r\n      };\r\n    } catch (error) {\r\n      const chain = this.chains.find((x) => x.id === chainId);\r\n      if (!chain)\r\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\r\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\r\n        try {\r\n          await provider.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: id,\r\n                chainName: chain.name,\r\n                nativeCurrency: chain.nativeCurrency,\r\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\r\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\r\n              }\r\n            ]\r\n          });\r\n          return chain;\r\n        } catch (addError) {\r\n          if (this.isUserRejectedRequestError(addError))\r\n            throw new UserRejectedRequestError(error);\r\n          throw new AddChainError();\r\n        }\r\n      }\r\n      if (this.isUserRejectedRequestError(error))\r\n        throw new UserRejectedRequestError(error);\r\n      throw new SwitchChainError(error);\r\n    }\r\n  }\r\n  async watchAsset({\r\n    address,\r\n    decimals = 18,\r\n    image,\r\n    symbol\r\n  }) {\r\n    const provider = await this.getProvider();\r\n    if (!provider)\r\n      throw new ConnectorNotFoundError();\r\n    return provider.request({\r\n      method: \"wallet_watchAsset\",\r\n      params: {\r\n        type: \"ERC20\",\r\n        options: {\r\n          address,\r\n          decimals,\r\n          image,\r\n          symbol\r\n        }\r\n      }\r\n    });\r\n  }\r\n  isUserRejectedRequestError(error) {\r\n    return error.code === 4001;\r\n  }\r\n};\r\n_provider = new WeakMap();\r\n_switchingChains = new WeakMap();\r\n\r\nexport {\r\n  InjectedConnector\r\n};\r\n", "import \"./chunk-KX4UEHS5.js\";\r\nimport {\r\n  AddChainError,\r\n  ChainDoesNotSupportMulticallError,\r\n  ChainMismatchError,\r\n  ChainNotConfiguredError,\r\n  Client,\r\n  ConnectorAlreadyConnectedError,\r\n  ConnectorNotFoundError,\r\n  ContractMethodDoesNotExistError,\r\n  ContractMethodNoResultError,\r\n  ContractMethodRevertedError,\r\n  ContractResultDecodeError,\r\n  ProviderChainsNotFound,\r\n  ProviderRpcError,\r\n  ResourceUnavailableError,\r\n  RpcError,\r\n  SwitchChainError,\r\n  SwitchChainNotSupportedError,\r\n  UserRejectedRequestError,\r\n  configureChains,\r\n  connect,\r\n  createClient,\r\n  createStorage,\r\n  deepEqual,\r\n  deserialize,\r\n  disconnect,\r\n  erc20ABI,\r\n  erc4626ABI,\r\n  erc721ABI,\r\n  fetchBalance,\r\n  fetchBlockNumber,\r\n  fetchEnsAddress,\r\n  fetchEnsAvatar,\r\n  fetchEnsName,\r\n  fetchEnsResolver,\r\n  fetchFeeData,\r\n  fetchSigner,\r\n  fetchToken,\r\n  fetchTransaction,\r\n  getAccount,\r\n  getClient,\r\n  getContract,\r\n  getNetwork,\r\n  getProvider,\r\n  getWebSocketProvider,\r\n  minimizeContractInterface,\r\n  multicall,\r\n  noopStorage,\r\n  normalizeChainId,\r\n  parseContractResult,\r\n  prepareSendTransaction,\r\n  prepareWriteContract,\r\n  readContract,\r\n  readContracts,\r\n  sendTransaction,\r\n  serialize,\r\n  signMessage,\r\n  signTypedData,\r\n  switchNetwork,\r\n  units,\r\n  waitForTransaction,\r\n  watchAccount,\r\n  watchBlockNumber,\r\n  watchContractEvent,\r\n  watchMulticall,\r\n  watchNetwork,\r\n  watchPendingTransactions,\r\n  watchProvider,\r\n  watchReadContract,\r\n  watchReadContracts,\r\n  watchSigner,\r\n  watchWebSocketProvider,\r\n  writeContract\r\n} from \"./chunk-55IO54NW.js\";\r\nimport {\r\n  goerli,\r\n  mainnet\r\n} from \"./chunk-SFNZNP4L.js\";\r\nimport {\r\n  Connector\r\n} from \"./chunk-BVC4KGLQ.js\";\r\nimport {\r\n  InjectedConnector\r\n} from \"./chunk-EQOEZP46.js\";\r\nimport \"./chunk-MQXBDTVK.js\";\r\nexport {\r\n  AddChainError,\r\n  ChainDoesNotSupportMulticallError,\r\n  ChainMismatchError,\r\n  ChainNotConfiguredError,\r\n  Client,\r\n  Connector,\r\n  ConnectorAlreadyConnectedError,\r\n  ConnectorNotFoundError,\r\n  ContractMethodDoesNotExistError,\r\n  ContractMethodNoResultError,\r\n  ContractMethodRevertedError,\r\n  ContractResultDecodeError,\r\n  InjectedConnector,\r\n  ProviderChainsNotFound,\r\n  ProviderRpcError,\r\n  ResourceUnavailableError,\r\n  RpcError,\r\n  SwitchChainError,\r\n  SwitchChainNotSupportedError,\r\n  UserRejectedRequestError,\r\n  configureChains,\r\n  connect,\r\n  createClient,\r\n  createStorage,\r\n  deepEqual,\r\n  deserialize,\r\n  disconnect,\r\n  erc20ABI,\r\n  erc4626ABI,\r\n  erc721ABI,\r\n  fetchBalance,\r\n  fetchBlockNumber,\r\n  fetchEnsAddress,\r\n  fetchEnsAvatar,\r\n  fetchEnsName,\r\n  fetchEnsResolver,\r\n  fetchFeeData,\r\n  fetchSigner,\r\n  fetchToken,\r\n  fetchTransaction,\r\n  getAccount,\r\n  getClient,\r\n  getContract,\r\n  getNetwork,\r\n  getProvider,\r\n  getWebSocketProvider,\r\n  goerli,\r\n  mainnet,\r\n  minimizeContractInterface,\r\n  multicall,\r\n  noopStorage,\r\n  normalizeChainId,\r\n  parseContractResult,\r\n  prepareSendTransaction,\r\n  prepareWriteContract,\r\n  readContract,\r\n  readContracts,\r\n  sendTransaction,\r\n  serialize,\r\n  signMessage,\r\n  signTypedData,\r\n  switchNetwork,\r\n  units,\r\n  waitForTransaction,\r\n  watchAccount,\r\n  watchBlockNumber,\r\n  watchContractEvent,\r\n  watchMulticall,\r\n  watchNetwork,\r\n  watchPendingTransactions,\r\n  watchProvider,\r\n  watchReadContract,\r\n  watchReadContracts,\r\n  watchSigner,\r\n  watchWebSocketProvider,\r\n  writeContract\r\n};\r\n", "", "import {\r\n  InjectedConnector\r\n} from \"./chunk-BVC4KGLQ.js\";\r\nimport {\r\n  __privateAdd,\r\n  __privateGet,\r\n  __privateMethod,\r\n  __privateSet\r\n} from \"./chunk-MQXBDTVK.js\";\r\n\r\n// src/utils/configureChains.ts\r\nimport { providers } from \"ethers\";\r\nfunction configureChains(defaultChains, providers2, {\r\n  minQuorum = 1,\r\n  pollingInterval = 4e3,\r\n  targetQuorum = 1,\r\n  stallTimeout\r\n} = {}) {\r\n  if (!defaultChains.length)\r\n    throw new Error(\"must have at least one chain\");\r\n  if (targetQuorum < minQuorum)\r\n    throw new Error(\"quorum cannot be lower than minQuorum\");\r\n  let chains = [];\r\n  const providers_ = {};\r\n  const webSocketProviders_ = {};\r\n  for (const chain of defaultChains) {\r\n    let configExists = false;\r\n    for (const provider of providers2) {\r\n      const apiConfig = provider(chain);\r\n      if (!apiConfig)\r\n        continue;\r\n      configExists = true;\r\n      if (!chains.some(({ id }) => id === chain.id)) {\r\n        chains = [...chains, apiConfig.chain];\r\n      }\r\n      providers_[chain.id] = [\r\n        ...providers_[chain.id] || [],\r\n        apiConfig.provider\r\n      ];\r\n      if (apiConfig.webSocketProvider) {\r\n        webSocketProviders_[chain.id] = [\r\n          ...webSocketProviders_[chain.id] || [],\r\n          apiConfig.webSocketProvider\r\n        ];\r\n      }\r\n    }\r\n    if (!configExists) {\r\n      throw new Error(\r\n        [\r\n          `Could not find valid provider configuration for chain \"${chain.name}\".\r\n`,\r\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\r\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\r\n        ].join(\"\\n\")\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    chains,\r\n    provider: ({ chainId }) => {\r\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\r\n      const chainProviders = providers_[activeChain.id];\r\n      if (!chainProviders || !chainProviders[0])\r\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\r\n      let provider;\r\n      if (chainProviders.length === 1) {\r\n        provider = chainProviders[0]();\r\n      } else {\r\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\r\n          stallTimeout\r\n        });\r\n      }\r\n      if (activeChain.id === 42220) {\r\n        provider.formatter.formats.block = {\r\n          ...provider.formatter.formats.block,\r\n          difficulty: () => 0,\r\n          gasLimit: () => 0\r\n        };\r\n      }\r\n      return Object.assign(provider, {\r\n        chains,\r\n        pollingInterval\r\n      });\r\n    },\r\n    webSocketProvider: ({ chainId }) => {\r\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\r\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\r\n      if (!chainWebSocketProviders)\r\n        return void 0;\r\n      const provider = chainWebSocketProviders[0]?.();\r\n      if (provider && activeChain.id === 42220) {\r\n        provider.formatter.formats.block = {\r\n          ...provider.formatter.formats.block,\r\n          difficulty: () => 0,\r\n          gasLimit: () => 0\r\n        };\r\n      }\r\n      return Object.assign(provider || {}, {\r\n        chains\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, { stallTimeout }) {\r\n  try {\r\n    return new providers.FallbackProvider(\r\n      providers_.map((chainProvider, index) => {\r\n        const provider = chainProvider();\r\n        return {\r\n          provider,\r\n          priority: provider.priority ?? index,\r\n          stallTimeout: provider.stallTimeout ?? stallTimeout,\r\n          weight: provider.weight\r\n        };\r\n      }),\r\n      targetQuorum\r\n    );\r\n  } catch (error) {\r\n    if (error?.message?.includes(\r\n      \"quorum will always fail; larger than total weight\"\r\n    )) {\r\n      if (targetQuorum === minQuorum)\r\n        throw error;\r\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\r\n        stallTimeout\r\n      });\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/client.ts\r\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\r\nimport { createStore } from \"zustand/vanilla\";\r\n\r\n// src/utils/assertActiveChain.ts\r\nfunction assertActiveChain({\r\n  chainId,\r\n  signer\r\n}) {\r\n  const { chain: activeChain, chains } = getNetwork();\r\n  const activeChainId = activeChain?.id;\r\n  if (activeChainId && chainId !== activeChainId) {\r\n    throw new ChainMismatchError({\r\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\r\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\r\n    });\r\n  }\r\n  if (signer) {\r\n    const signerChainId = signer.provider?.network?.chainId;\r\n    if (signerChainId && chainId !== signerChainId) {\r\n      const connector = getClient().connector;\r\n      throw new ChainNotConfiguredError({\r\n        chainId,\r\n        connectorId: connector?.id ?? \"unknown\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// src/utils/debounce.ts\r\nfunction debounce(fn, waitTime = 0) {\r\n  let timeout;\r\n  return function(...args) {\r\n    if (!waitTime)\r\n      return fn(...args);\r\n    if (timeout)\r\n      clearTimeout(timeout);\r\n    timeout = setTimeout(function() {\r\n      timeout = null;\r\n      fn(...args);\r\n    }, waitTime);\r\n  };\r\n}\r\n\r\n// src/utils/deepEqual.ts\r\nfunction deepEqual(a, b) {\r\n  if (a === b)\r\n    return true;\r\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\r\n    if (a.constructor !== b.constructor)\r\n      return false;\r\n    let length;\r\n    let i;\r\n    if (Array.isArray(a) && Array.isArray(b)) {\r\n      length = a.length;\r\n      if (length != b.length)\r\n        return false;\r\n      for (i = length; i-- !== 0; )\r\n        if (!deepEqual(a[i], b[i]))\r\n          return false;\r\n      return true;\r\n    }\r\n    if (a.valueOf !== Object.prototype.valueOf)\r\n      return a.valueOf() === b.valueOf();\r\n    if (a.toString !== Object.prototype.toString)\r\n      return a.toString() === b.toString();\r\n    const keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length)\r\n      return false;\r\n    for (i = length; i-- !== 0; )\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\r\n        return false;\r\n    for (i = length; i-- !== 0; ) {\r\n      const key = keys[i];\r\n      if (key && !deepEqual(a[key], b[key]))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  return a !== a && b !== b;\r\n}\r\n\r\n// src/utils/deserialize.ts\r\nimport { BigNumber } from \"ethers\";\r\nvar findAndReplace = (cacheRef, {\r\n  find,\r\n  replace\r\n}) => {\r\n  if (cacheRef && find(cacheRef)) {\r\n    return replace(cacheRef);\r\n  }\r\n  if (typeof cacheRef !== \"object\") {\r\n    return cacheRef;\r\n  }\r\n  if (Array.isArray(cacheRef)) {\r\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\r\n  }\r\n  if (cacheRef instanceof Object) {\r\n    return Object.entries(cacheRef).reduce(\r\n      (curr, [key, value]) => ({\r\n        ...curr,\r\n        [key]: findAndReplace(value, { find, replace })\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n  return cacheRef;\r\n};\r\nfunction deserialize(cachedString) {\r\n  const cache = JSON.parse(cachedString);\r\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\r\n    find: (data) => data.type === \"BigNumber\",\r\n    replace: (data) => BigNumber.from(data.hex)\r\n  });\r\n  return deserializedCacheWithBigNumbers;\r\n}\r\n\r\n// src/utils/normalizeFunctionName.ts\r\nimport { BigNumber as BigNumber2 } from \"ethers\";\r\nimport { FunctionFragment, isAddress } from \"ethers/lib/utils.js\";\r\nfunction normalizeFunctionName({\r\n  contract,\r\n  functionName,\r\n  args = []\r\n}) {\r\n  if (functionName in contract.functions)\r\n    return functionName;\r\n  const argsLength = args?.length ?? 0;\r\n  const overloadFunctions = Object.keys(contract.functions).filter((x) => x.startsWith(`${functionName}(`)).map((x) => ({ name: x, fragment: FunctionFragment.fromString(x) })).filter((x) => argsLength === x.fragment.inputs.length);\r\n  for (const overloadFunction of overloadFunctions) {\r\n    const matched = args.every((arg, index) => {\r\n      const abiParameter = overloadFunction.fragment.inputs[index];\r\n      return isArgOfType(arg, abiParameter);\r\n    });\r\n    if (matched)\r\n      return overloadFunction.name;\r\n  }\r\n  return functionName;\r\n}\r\nfunction isArgOfType(arg, abiParameter) {\r\n  const argType = typeof arg;\r\n  const abiParameterType = abiParameter.type;\r\n  switch (abiParameterType) {\r\n    case \"address\":\r\n      return isAddress(arg);\r\n    case \"bool\":\r\n      return argType === \"boolean\";\r\n    case \"function\":\r\n      return argType === \"string\";\r\n    case \"string\":\r\n      return argType === \"string\";\r\n    default: {\r\n      if (abiParameterType === \"tuple\" && \"components\" in abiParameter)\r\n        return Object.values(abiParameter.components).every(\r\n          (component, index) => {\r\n            return isArgOfType(\r\n              Object.values(arg)[index],\r\n              component\r\n            );\r\n          }\r\n        );\r\n      if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\r\n        abiParameterType\r\n      ))\r\n        return argType === \"number\" || argType === \"bigint\" || BigNumber2.isBigNumber(arg);\r\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\r\n        return argType === \"string\" || arg instanceof Uint8Array;\r\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\r\n        return Array.isArray(arg) && arg.every(\r\n          (x) => isArgOfType(x, {\r\n            ...abiParameter,\r\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, \"\")\r\n          })\r\n        );\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// src/utils/logger.ts\r\nfunction logWarn(message) {\r\n  getClient()?.config.logger?.warn?.(message);\r\n}\r\n\r\n// src/utils/minimizeContractInterface.ts\r\nimport { Contract } from \"ethers\";\r\nimport { FormatTypes } from \"ethers/lib/utils.js\";\r\nfunction minimizeContractInterface(config) {\r\n  try {\r\n    const minimizedAbi = config.abi.filter(\r\n      (x) => x.type === \"function\" && x.name === config.functionName\r\n    );\r\n    if (minimizedAbi.length === 0)\r\n      throw new Error(\"Invalid ABI\");\r\n    return minimizedAbi;\r\n  } catch (error) {\r\n    const abi = Contract.getInterface(config.abi).format(\r\n      FormatTypes.full\r\n    );\r\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\r\n    return minimizedInterface.filter((i) => i.includes(config.functionName));\r\n  }\r\n}\r\n\r\n// src/utils/normalizeChainId.ts\r\nfunction normalizeChainId(chainId) {\r\n  if (typeof chainId === \"string\")\r\n    return Number.parseInt(\r\n      chainId,\r\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\r\n    );\r\n  if (typeof chainId === \"bigint\")\r\n    return Number(chainId);\r\n  return chainId;\r\n}\r\n\r\n// src/utils/parseContractResult.ts\r\nimport { Contract as Contract2 } from \"ethers\";\r\nfunction isPlainArray(value) {\r\n  return Array.isArray(value) && Object.keys(value).length === value.length;\r\n}\r\nfunction parseContractResult({\r\n  abi,\r\n  data,\r\n  functionName\r\n}) {\r\n  if (data && isPlainArray(data)) {\r\n    const iface = Contract2.getInterface(abi);\r\n    const fragment = iface.getFunction(functionName);\r\n    const isTuple = (fragment.outputs?.length || 0) > 1;\r\n    const data_ = isTuple ? data : [data];\r\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\r\n    const decodedResult = iface.decodeFunctionResult(\r\n      functionName,\r\n      encodedResult\r\n    );\r\n    return isTuple ? decodedResult : decodedResult[0];\r\n  }\r\n  return data;\r\n}\r\n\r\n// src/utils/serialize.ts\r\nfunction getReferenceKey(keys, cutoff) {\r\n  return keys.slice(0, cutoff).join(\".\") || \".\";\r\n}\r\nfunction getCutoff(array, value) {\r\n  const { length } = array;\r\n  for (let index = 0; index < length; ++index) {\r\n    if (array[index] === value) {\r\n      return index + 1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\nfunction createReplacer(replacer, circularReplacer) {\r\n  const hasReplacer = typeof replacer === \"function\";\r\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\r\n  const cache = [];\r\n  const keys = [];\r\n  return function replace(key, value) {\r\n    if (typeof value === \"object\") {\r\n      if (cache.length) {\r\n        const thisCutoff = getCutoff(cache, this);\r\n        if (thisCutoff === 0) {\r\n          cache[cache.length] = this;\r\n        } else {\r\n          cache.splice(thisCutoff);\r\n          keys.splice(thisCutoff);\r\n        }\r\n        keys[keys.length] = key;\r\n        const valueCutoff = getCutoff(cache, value);\r\n        if (valueCutoff !== 0) {\r\n          return hasCircularReplacer ? circularReplacer.call(\r\n            this,\r\n            key,\r\n            value,\r\n            getReferenceKey(keys, valueCutoff)\r\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\r\n        }\r\n      } else {\r\n        cache[0] = value;\r\n        keys[0] = key;\r\n      }\r\n    }\r\n    return hasReplacer ? replacer.call(this, key, value) : value;\r\n  };\r\n}\r\nfunction serialize(value, replacer, indent, circularReplacer) {\r\n  return JSON.stringify(\r\n    value,\r\n    createReplacer(replacer, circularReplacer),\r\n    indent ?? void 0\r\n  );\r\n}\r\n\r\n// src/storage.ts\r\nvar noopStorage = {\r\n  getItem: (_key) => \"\",\r\n  setItem: (_key, _value) => null,\r\n  removeItem: (_key) => null\r\n};\r\nfunction createStorage({\r\n  deserialize: deserialize2 = deserialize,\r\n  key: prefix = \"wagmi\",\r\n  serialize: serialize2 = serialize,\r\n  storage\r\n}) {\r\n  return {\r\n    ...storage,\r\n    getItem: (key, defaultState = null) => {\r\n      const value = storage.getItem(`${prefix}.${key}`);\r\n      try {\r\n        return value ? deserialize2(value) : defaultState;\r\n      } catch (error) {\r\n        console.warn(error);\r\n        return defaultState;\r\n      }\r\n    },\r\n    setItem: (key, value) => {\r\n      if (value === null) {\r\n        storage.removeItem(`${prefix}.${key}`);\r\n      } else {\r\n        try {\r\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }\r\n    },\r\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\r\n  };\r\n}\r\n\r\n// src/client.ts\r\nvar storeKey = \"store\";\r\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\r\nvar Client = class {\r\n  constructor({\r\n    autoConnect = false,\r\n    connectors = [new InjectedConnector()],\r\n    provider,\r\n    storage = createStorage({\r\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\r\n    }),\r\n    logger = {\r\n      warn: console.warn\r\n    },\r\n    webSocketProvider\r\n  }) {\r\n    __privateAdd(this, _addEffects);\r\n    this.providers = /* @__PURE__ */ new Map();\r\n    this.webSocketProviders = /* @__PURE__ */ new Map();\r\n    __privateAdd(this, _isAutoConnecting, void 0);\r\n    __privateAdd(this, _lastUsedConnector, void 0);\r\n    this.config = {\r\n      autoConnect,\r\n      connectors,\r\n      logger,\r\n      provider,\r\n      storage,\r\n      webSocketProvider\r\n    };\r\n    let status = \"disconnected\";\r\n    let chainId;\r\n    if (autoConnect) {\r\n      try {\r\n        const rawState = storage.getItem(storeKey);\r\n        const data = rawState?.state?.data;\r\n        status = data?.account ? \"reconnecting\" : \"connecting\";\r\n        chainId = data?.chain?.id;\r\n      } catch (_error) {\r\n      }\r\n    }\r\n    this.store = createStore(\r\n      subscribeWithSelector(\r\n        persist(\r\n          () => ({\r\n            connectors: typeof connectors === \"function\" ? connectors() : connectors,\r\n            provider: this.getProvider({ chainId }),\r\n            status,\r\n            webSocketProvider: this.getWebSocketProvider({ chainId })\r\n          }),\r\n          {\r\n            name: storeKey,\r\n            storage,\r\n            partialize: (state) => ({\r\n              ...autoConnect && {\r\n                data: {\r\n                  account: state?.data?.account,\r\n                  chain: state?.data?.chain\r\n                }\r\n              },\r\n              chains: state?.chains\r\n            }),\r\n            version: 2\r\n          }\r\n        )\r\n      )\r\n    );\r\n    this.storage = storage;\r\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\r\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\r\n    if (autoConnect && typeof window !== \"undefined\")\r\n      setTimeout(async () => await this.autoConnect(), 0);\r\n  }\r\n  get chains() {\r\n    return this.store.getState().chains;\r\n  }\r\n  get connectors() {\r\n    return this.store.getState().connectors;\r\n  }\r\n  get connector() {\r\n    return this.store.getState().connector;\r\n  }\r\n  get data() {\r\n    return this.store.getState().data;\r\n  }\r\n  get error() {\r\n    return this.store.getState().error;\r\n  }\r\n  get lastUsedChainId() {\r\n    return this.data?.chain?.id;\r\n  }\r\n  get provider() {\r\n    return this.store.getState().provider;\r\n  }\r\n  get status() {\r\n    return this.store.getState().status;\r\n  }\r\n  get subscribe() {\r\n    return this.store.subscribe;\r\n  }\r\n  get webSocketProvider() {\r\n    return this.store.getState().webSocketProvider;\r\n  }\r\n  setState(updater) {\r\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\r\n    this.store.setState(newState, true);\r\n  }\r\n  clearState() {\r\n    this.setState((x) => ({\r\n      ...x,\r\n      chains: void 0,\r\n      connector: void 0,\r\n      data: void 0,\r\n      error: void 0,\r\n      status: \"disconnected\"\r\n    }));\r\n  }\r\n  async destroy() {\r\n    if (this.connector)\r\n      await this.connector.disconnect?.();\r\n    __privateSet(this, _isAutoConnecting, false);\r\n    this.clearState();\r\n    this.store.destroy();\r\n  }\r\n  async autoConnect() {\r\n    if (__privateGet(this, _isAutoConnecting))\r\n      return;\r\n    __privateSet(this, _isAutoConnecting, true);\r\n    this.setState((x) => ({\r\n      ...x,\r\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\r\n    }));\r\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\r\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\r\n    ) : this.connectors;\r\n    let connected = false;\r\n    for (const connector of sorted) {\r\n      if (!connector.ready || !connector.isAuthorized)\r\n        continue;\r\n      const isAuthorized = await connector.isAuthorized();\r\n      if (!isAuthorized)\r\n        continue;\r\n      const data = await connector.connect();\r\n      this.setState((x) => ({\r\n        ...x,\r\n        connector,\r\n        chains: connector?.chains,\r\n        data,\r\n        status: \"connected\"\r\n      }));\r\n      connected = true;\r\n      break;\r\n    }\r\n    if (!connected)\r\n      this.setState((x) => ({\r\n        ...x,\r\n        data: void 0,\r\n        status: \"disconnected\"\r\n      }));\r\n    __privateSet(this, _isAutoConnecting, false);\r\n    return this.data;\r\n  }\r\n  getProvider({ bust, chainId } = {}) {\r\n    let provider_ = this.providers.get(chainId ?? -1);\r\n    if (provider_ && !bust)\r\n      return provider_;\r\n    const { provider } = this.config;\r\n    provider_ = typeof provider === \"function\" ? provider({ chainId }) : provider;\r\n    this.providers.set(chainId ?? -1, provider_);\r\n    return provider_;\r\n  }\r\n  getWebSocketProvider({\r\n    bust,\r\n    chainId\r\n  } = {}) {\r\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\r\n    if (webSocketProvider_ && !bust)\r\n      return webSocketProvider_;\r\n    const { webSocketProvider } = this.config;\r\n    webSocketProvider_ = typeof webSocketProvider === \"function\" ? webSocketProvider({ chainId }) : webSocketProvider;\r\n    if (webSocketProvider_)\r\n      this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\r\n    return webSocketProvider_;\r\n  }\r\n  setLastUsedConnector(lastUsedConnector = null) {\r\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\r\n  }\r\n};\r\n_isAutoConnecting = new WeakMap();\r\n_lastUsedConnector = new WeakMap();\r\n_addEffects = new WeakSet();\r\naddEffects_fn = function() {\r\n  const onChange = (data) => {\r\n    this.setState((x) => ({\r\n      ...x,\r\n      data: { ...x.data, ...data }\r\n    }));\r\n  };\r\n  const onDisconnect = () => {\r\n    this.clearState();\r\n  };\r\n  const onError = (error) => {\r\n    this.setState((x) => ({ ...x, error }));\r\n  };\r\n  this.store.subscribe(\r\n    ({ connector }) => connector,\r\n    (connector, prevConnector) => {\r\n      prevConnector?.off?.(\"change\", onChange);\r\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\r\n      prevConnector?.off?.(\"error\", onError);\r\n      if (!connector)\r\n        return;\r\n      connector.on?.(\"change\", onChange);\r\n      connector.on?.(\"disconnect\", onDisconnect);\r\n      connector.on?.(\"error\", onError);\r\n    }\r\n  );\r\n  const { provider, webSocketProvider } = this.config;\r\n  const subscribeProvider = typeof provider === \"function\";\r\n  const subscribeWebSocketProvider = typeof webSocketProvider === \"function\";\r\n  if (subscribeProvider || subscribeWebSocketProvider)\r\n    this.store.subscribe(\r\n      ({ data }) => data?.chain?.id,\r\n      (chainId) => {\r\n        this.setState((x) => ({\r\n          ...x,\r\n          provider: this.getProvider({ bust: true, chainId }),\r\n          webSocketProvider: this.getWebSocketProvider({\r\n            bust: true,\r\n            chainId\r\n          })\r\n        }));\r\n      }\r\n    );\r\n};\r\nvar client;\r\nfunction createClient(config) {\r\n  const client_ = new Client(config);\r\n  client = client_;\r\n  return client_;\r\n}\r\nfunction getClient() {\r\n  if (!client) {\r\n    throw new Error(\r\n      \"No wagmi client found. Ensure you have set up a client: https://wagmi.sh/react/client\"\r\n    );\r\n  }\r\n  return client;\r\n}\r\n\r\n// src/actions/accounts/connect.ts\r\nasync function connect({\r\n  chainId,\r\n  connector\r\n}) {\r\n  const client2 = getClient();\r\n  const activeConnector = client2.connector;\r\n  if (activeConnector && connector.id === activeConnector.id)\r\n    throw new ConnectorAlreadyConnectedError();\r\n  try {\r\n    client2.setState((x) => ({ ...x, status: \"connecting\" }));\r\n    const data = await connector.connect({ chainId });\r\n    client2.setLastUsedConnector(connector.id);\r\n    client2.setState((x) => ({\r\n      ...x,\r\n      connector,\r\n      chains: connector?.chains,\r\n      data,\r\n      status: \"connected\"\r\n    }));\r\n    client2.storage.setItem(\"connected\", true);\r\n    return { ...data, connector };\r\n  } catch (err) {\r\n    client2.setState((x) => {\r\n      return {\r\n        ...x,\r\n        status: x.connector ? \"connected\" : \"disconnected\"\r\n      };\r\n    });\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/disconnect.ts\r\nasync function disconnect() {\r\n  const client2 = getClient();\r\n  if (client2.connector)\r\n    await client2.connector.disconnect();\r\n  client2.clearState();\r\n  client2.storage.removeItem(\"connected\");\r\n}\r\n\r\n// src/actions/accounts/fetchBalance.ts\r\nimport { formatUnits as formatUnits3, parseBytes32String as parseBytes32String2 } from \"ethers/lib/utils.js\";\r\n\r\n// src/constants/abis.ts\r\nvar erc20ABI = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"allowance\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"decimals\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transfer\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  }\r\n];\r\nvar erc20ABI_bytes32 = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"allowance\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"decimals\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bytes32\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bytes32\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transfer\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  }\r\n];\r\nvar erc721ABI = [\r\n  {\r\n    type: \"event\",\r\n    name: \"Approval\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"ApprovalForAll\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"approved\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"event\",\r\n    name: \"Transfer\",\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"approve\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"balanceOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"getApproved\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"address\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"isApprovedForAll\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"name\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"ownerOf\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"safeTransferFrom\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"safeTransferFrom\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"id\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"data\",\r\n        type: \"bytes\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"setApprovalForAll\",\r\n    stateMutability: \"nonpayable\",\r\n    inputs: [\r\n      {\r\n        name: \"operator\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"approved\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"symbol\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenByIndex\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"index\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenByIndex\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"index\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"tokenURI\",\r\n    stateMutability: \"view\",\r\n    inputs: [\r\n      {\r\n        name: \"tokenId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"totalSupply\",\r\n    stateMutability: \"view\",\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"function\",\r\n    name: \"transferFrom\",\r\n    stateMutability: \"payable\",\r\n    inputs: [\r\n      {\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"recipient\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"tokeId\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    outputs: []\r\n  }\r\n];\r\nvar multicallABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            name: \"target\",\r\n            type: \"address\"\r\n          },\r\n          {\r\n            name: \"allowFailure\",\r\n            type: \"bool\"\r\n          },\r\n          {\r\n            name: \"callData\",\r\n            type: \"bytes\"\r\n          }\r\n        ],\r\n        name: \"calls\",\r\n        type: \"tuple[]\"\r\n      }\r\n    ],\r\n    name: \"aggregate3\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            name: \"success\",\r\n            type: \"bool\"\r\n          },\r\n          {\r\n            name: \"returnData\",\r\n            type: \"bytes\"\r\n          }\r\n        ],\r\n        name: \"returnData\",\r\n        type: \"tuple[]\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  }\r\n];\r\nvar erc4626ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Deposit\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"sender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"Withdraw\",\r\n    type: \"event\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"spender\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"asset\",\r\n    outputs: [\r\n      {\r\n        name: \"assetTokenAddress\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"account\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"convertToAssets\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"convertToShares\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"deposit\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"caller\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxDeposit\",\r\n    outputs: [\r\n      {\r\n        name: \"maxAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"caller\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxMint\",\r\n    outputs: [\r\n      {\r\n        name: \"maxShares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxRedeem\",\r\n    outputs: [\r\n      {\r\n        name: \"maxShares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"maxWithdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"maxAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewDeposit\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewMint\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewRedeem\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"previewWithdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"redeem\",\r\n    outputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalAssets\",\r\n    outputs: [\r\n      {\r\n        name: \"totalManagedAssets\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"from\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"to\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"amount\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        name: \"assets\",\r\n        type: \"uint256\"\r\n      },\r\n      {\r\n        name: \"receiver\",\r\n        type: \"address\"\r\n      },\r\n      {\r\n        name: \"owner\",\r\n        type: \"address\"\r\n      }\r\n    ],\r\n    name: \"withdraw\",\r\n    outputs: [\r\n      {\r\n        name: \"shares\",\r\n        type: \"uint256\"\r\n      }\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\"\r\n  }\r\n];\r\n\r\n// src/constants/units.ts\r\nvar units = [\r\n  \"wei\",\r\n  \"kwei\",\r\n  \"mwei\",\r\n  \"gwei\",\r\n  \"szabo\",\r\n  \"finney\",\r\n  \"ether\"\r\n];\r\n\r\n// src/actions/contracts/fetchToken.ts\r\nimport { formatUnits, parseBytes32String } from \"ethers/lib/utils.js\";\r\nasync function fetchToken({\r\n  address,\r\n  chainId,\r\n  formatUnits: units2 = \"ether\"\r\n}) {\r\n  async function fetchToken_({ abi }) {\r\n    const erc20Config = { address, abi, chainId };\r\n    const [decimals, name, symbol, totalSupply] = await readContracts({\r\n      allowFailure: false,\r\n      contracts: [\r\n        { ...erc20Config, functionName: \"decimals\" },\r\n        { ...erc20Config, functionName: \"name\" },\r\n        { ...erc20Config, functionName: \"symbol\" },\r\n        { ...erc20Config, functionName: \"totalSupply\" }\r\n      ]\r\n    });\r\n    return {\r\n      address,\r\n      decimals,\r\n      name,\r\n      symbol,\r\n      totalSupply: {\r\n        formatted: formatUnits(totalSupply, units2),\r\n        value: totalSupply\r\n      }\r\n    };\r\n  }\r\n  try {\r\n    return await fetchToken_({ abi: erc20ABI });\r\n  } catch (err) {\r\n    if (err instanceof ContractResultDecodeError) {\r\n      const { name, symbol, ...rest } = await fetchToken_({\r\n        abi: erc20ABI_bytes32\r\n      });\r\n      return {\r\n        name: parseBytes32String(name),\r\n        symbol: parseBytes32String(symbol),\r\n        ...rest\r\n      };\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/contracts/getContract.ts\r\nimport { Contract as EthersContract } from \"ethers\";\r\nfunction getContract({\r\n  address,\r\n  abi,\r\n  signerOrProvider\r\n}) {\r\n  return new EthersContract(\r\n    address,\r\n    abi,\r\n    signerOrProvider\r\n  );\r\n}\r\n\r\n// src/actions/contracts/prepareWriteContract.ts\r\nasync function prepareWriteContract({\r\n  abi,\r\n  address,\r\n  chainId,\r\n  functionName,\r\n  overrides,\r\n  signer: signer_,\r\n  ...config\r\n}) {\r\n  const signer = signer_ ?? await fetchSigner({ chainId });\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const contract = getContract({\r\n    address,\r\n    abi,\r\n    signerOrProvider: signer\r\n  });\r\n  const args = config.args;\r\n  const normalizedFunctionName = normalizeFunctionName({\r\n    contract,\r\n    functionName,\r\n    args\r\n  });\r\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\r\n  if (!populateTransactionFn)\r\n    throw new ContractMethodDoesNotExistError({\r\n      address,\r\n      functionName: normalizedFunctionName\r\n    });\r\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\r\n  const unsignedTransaction = await populateTransactionFn(\r\n    ...params\r\n  );\r\n  const gasLimit = unsignedTransaction.gasLimit || await signer.estimateGas(unsignedTransaction);\r\n  const minimizedAbi = minimizeContractInterface({\r\n    abi,\r\n    functionName\r\n  });\r\n  return {\r\n    abi: minimizedAbi,\r\n    address,\r\n    chainId,\r\n    functionName,\r\n    mode: \"prepared\",\r\n    request: {\r\n      ...unsignedTransaction,\r\n      gasLimit\r\n    }\r\n  };\r\n}\r\n\r\n// src/actions/providers/getProvider.ts\r\nfunction getProvider({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  if (chainId)\r\n    return client2.getProvider({ chainId }) || client2.provider;\r\n  return client2.provider;\r\n}\r\n\r\n// src/actions/providers/getWebSocketProvider.ts\r\nfunction getWebSocketProvider({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  if (chainId)\r\n    return client2.getWebSocketProvider({ chainId }) || client2.webSocketProvider;\r\n  return client2.webSocketProvider;\r\n}\r\n\r\n// src/actions/providers/watchProvider.ts\r\nfunction watchProvider(args, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(getProvider(args));\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/providers/watchWebSocketProvider.ts\r\nfunction watchWebSocketProvider(args, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(getWebSocketProvider(args));\r\n  const unsubscribe = client2.subscribe(\r\n    ({ webSocketProvider }) => webSocketProvider,\r\n    handleChange\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/contracts/multicall.ts\r\nasync function multicall({\r\n  allowFailure = true,\r\n  chainId,\r\n  contracts,\r\n  overrides\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  if (!provider.chains)\r\n    throw new ProviderChainsNotFound();\r\n  const chain = provider.chains.find((chain2) => chain2.id === chainId) || provider.chains[0];\r\n  if (!chain)\r\n    throw new ProviderChainsNotFound();\r\n  if (!chain?.contracts?.multicall3)\r\n    throw new ChainDoesNotSupportMulticallError({ chain });\r\n  if (typeof overrides?.blockTag === \"number\" && overrides?.blockTag < (chain.contracts.multicall3.blockCreated ?? 0))\r\n    throw new ChainDoesNotSupportMulticallError({\r\n      blockNumber: overrides?.blockTag,\r\n      chain\r\n    });\r\n  const multicallContract = getContract({\r\n    address: chain.contracts.multicall3.address,\r\n    abi: multicallABI,\r\n    signerOrProvider: provider\r\n  });\r\n  const calls = contracts.map(\r\n    ({ address, abi, functionName, ...config }) => {\r\n      const { args } = config || {};\r\n      const contract = getContract({ address, abi });\r\n      const params2 = args ?? [];\r\n      const normalizedFunctionName = normalizeFunctionName({\r\n        contract,\r\n        functionName,\r\n        args\r\n      });\r\n      try {\r\n        const contractFunction = contract[normalizedFunctionName];\r\n        if (!contractFunction)\r\n          logWarn(\r\n            `\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`\r\n          );\r\n        const callData = contract.interface.encodeFunctionData(\r\n          normalizedFunctionName,\r\n          params2\r\n        );\r\n        return {\r\n          target: address,\r\n          allowFailure,\r\n          callData\r\n        };\r\n      } catch (err) {\r\n        if (!allowFailure)\r\n          throw err;\r\n        return {\r\n          target: address,\r\n          allowFailure,\r\n          callData: \"0x\"\r\n        };\r\n      }\r\n    }\r\n  );\r\n  const params = [...[calls], ...overrides ? [overrides] : []];\r\n  const results = await multicallContract.aggregate3(\r\n    ...params\r\n  );\r\n  return results.map(({ returnData, success }, i) => {\r\n    const { address, abi, functionName, ...rest } = contracts[i];\r\n    const contract = getContract({\r\n      address,\r\n      abi\r\n    });\r\n    const args = rest.args;\r\n    const normalizedFunctionName = normalizeFunctionName({\r\n      contract,\r\n      functionName,\r\n      args\r\n    });\r\n    if (!success) {\r\n      let error;\r\n      try {\r\n        contract.interface.decodeFunctionResult(\r\n          normalizedFunctionName,\r\n          returnData\r\n        );\r\n      } catch (err) {\r\n        error = new ContractMethodRevertedError({\r\n          address,\r\n          args,\r\n          chainId: chain.id,\r\n          functionName: normalizedFunctionName,\r\n          errorMessage: err.message\r\n        });\r\n        if (!allowFailure)\r\n          throw error;\r\n        logWarn(error.message);\r\n      }\r\n      return null;\r\n    }\r\n    if (returnData === \"0x\") {\r\n      const error = new ContractMethodNoResultError({\r\n        address,\r\n        args,\r\n        chainId: chain.id,\r\n        functionName: normalizedFunctionName\r\n      });\r\n      if (!allowFailure)\r\n        throw error;\r\n      logWarn(error.message);\r\n      return null;\r\n    }\r\n    try {\r\n      const result = contract.interface.decodeFunctionResult(\r\n        normalizedFunctionName,\r\n        returnData\r\n      );\r\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\r\n    } catch (err) {\r\n      const error = new ContractResultDecodeError({\r\n        address,\r\n        args,\r\n        chainId: chain.id,\r\n        functionName: normalizedFunctionName,\r\n        errorMessage: err.message\r\n      });\r\n      if (!allowFailure)\r\n        throw error;\r\n      logWarn(error.message);\r\n      return null;\r\n    }\r\n  });\r\n}\r\n\r\n// src/actions/contracts/readContract.ts\r\nasync function readContract({\r\n  address,\r\n  chainId,\r\n  abi,\r\n  functionName,\r\n  overrides,\r\n  ...config\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const contract = getContract({\r\n    address,\r\n    abi,\r\n    signerOrProvider: provider\r\n  });\r\n  const args = config.args;\r\n  const normalizedFunctionName = normalizeFunctionName({\r\n    contract,\r\n    functionName,\r\n    args\r\n  });\r\n  const contractFunction = contract[normalizedFunctionName];\r\n  if (!contractFunction)\r\n    throw new ContractMethodDoesNotExistError({\r\n      address,\r\n      functionName: normalizedFunctionName\r\n    });\r\n  const params = [...args ?? [], ...overrides ? [overrides] : []];\r\n  return contractFunction?.(...params);\r\n}\r\n\r\n// src/actions/contracts/readContracts.ts\r\nasync function readContracts({\r\n  allowFailure = true,\r\n  contracts,\r\n  overrides\r\n}) {\r\n  try {\r\n    const provider = getProvider();\r\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\r\n      const chainId = contract.chainId ?? provider.network.chainId;\r\n      return {\r\n        ...contracts2,\r\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\r\n      };\r\n    }, {});\r\n    const promises = () => Object.entries(contractsByChainId).map(\r\n      ([chainId, contracts2]) => multicall({\r\n        allowFailure,\r\n        chainId: parseInt(chainId),\r\n        contracts: contracts2.map(({ contract }) => contract),\r\n        overrides\r\n      })\r\n    );\r\n    let multicallResults;\r\n    if (allowFailure) {\r\n      multicallResults = (await Promise.allSettled(promises())).map((result) => {\r\n        if (result.status === \"fulfilled\")\r\n          return result.value;\r\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\r\n          logWarn(result.reason.message);\r\n          throw result.reason;\r\n        }\r\n        return null;\r\n      }).flat();\r\n    } else {\r\n      multicallResults = (await Promise.all(promises())).flat();\r\n    }\r\n    const resultIndexes = Object.values(contractsByChainId).map((contracts2) => contracts2.map(({ index }) => index)).flat();\r\n    return multicallResults.reduce((results, result, index) => {\r\n      if (results)\r\n        results[resultIndexes[index]] = result;\r\n      return results;\r\n    }, []);\r\n  } catch (err) {\r\n    if (err instanceof ContractResultDecodeError)\r\n      throw err;\r\n    if (err instanceof ContractMethodNoResultError)\r\n      throw err;\r\n    if (err instanceof ContractMethodRevertedError)\r\n      throw err;\r\n    const promises = () => contracts.map(\r\n      (contract) => readContract({ ...contract, overrides })\r\n    );\r\n    if (allowFailure)\r\n      return (await Promise.allSettled(promises())).map((result, i) => {\r\n        if (result.status === \"fulfilled\")\r\n          return result.value;\r\n        const { address, args, chainId, functionName } = contracts[i];\r\n        const error = new ContractMethodRevertedError({\r\n          address,\r\n          functionName,\r\n          chainId: chainId ?? 1,\r\n          args,\r\n          errorMessage: result.reason\r\n        });\r\n        logWarn(error.message);\r\n        return null;\r\n      });\r\n    return await Promise.all(promises());\r\n  }\r\n}\r\n\r\n// src/actions/contracts/watchContractEvent.ts\r\nimport { shallow } from \"zustand/shallow\";\r\nfunction watchContractEvent({\r\n  address,\r\n  abi,\r\n  chainId,\r\n  eventName,\r\n  once\r\n}, callback) {\r\n  const handler = (...event) => callback(...event);\r\n  let contract;\r\n  const watchEvent = async () => {\r\n    if (contract)\r\n      contract?.off(eventName, handler);\r\n    const signerOrProvider = getWebSocketProvider({ chainId }) || getProvider({ chainId });\r\n    contract = getContract({\r\n      address,\r\n      abi,\r\n      signerOrProvider\r\n    });\r\n    if (once)\r\n      contract.once(eventName, handler);\r\n    else\r\n      contract.on(eventName, handler);\r\n  };\r\n  watchEvent();\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({\r\n      provider,\r\n      webSocketProvider\r\n    }),\r\n    watchEvent,\r\n    { equalityFn: shallow }\r\n  );\r\n  return () => {\r\n    contract?.off(eventName, handler);\r\n    unsubscribe();\r\n  };\r\n}\r\n\r\n// src/actions/network-status/watchBlockNumber.ts\r\nimport { shallow as shallow2 } from \"zustand/shallow\";\r\n\r\n// src/actions/network-status/fetchBlockNumber.ts\r\nasync function fetchBlockNumber({\r\n  chainId\r\n} = {}) {\r\n  const provider = getProvider({ chainId });\r\n  const blockNumber = await provider.getBlockNumber();\r\n  return blockNumber;\r\n}\r\n\r\n// src/actions/network-status/watchBlockNumber.ts\r\nfunction watchBlockNumber(args, callback) {\r\n  const debouncedCallback = debounce(callback, 1);\r\n  let previousProvider;\r\n  const createListener = (provider) => {\r\n    if (previousProvider) {\r\n      previousProvider?.off(\"block\", debouncedCallback);\r\n    }\r\n    provider.on(\"block\", debouncedCallback);\r\n    previousProvider = provider;\r\n  };\r\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\r\n  if (args.listen)\r\n    createListener(provider_);\r\n  let active = true;\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\r\n    async ({ provider, webSocketProvider }) => {\r\n      const provider_2 = webSocketProvider ?? provider;\r\n      if (args.listen && !args.chainId && provider_2) {\r\n        createListener(provider_2);\r\n      }\r\n      const blockNumber = await fetchBlockNumber({ chainId: args.chainId });\r\n      if (!active)\r\n        return;\r\n      callback(blockNumber);\r\n    },\r\n    {\r\n      equalityFn: shallow2\r\n    }\r\n  );\r\n  return () => {\r\n    active = false;\r\n    unsubscribe();\r\n    provider_?.off(\"block\", debouncedCallback);\r\n    previousProvider?.off(\"block\", debouncedCallback);\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchMulticall.ts\r\nfunction watchMulticall(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await multicall(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchReadContract.ts\r\nfunction watchReadContract(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await readContract(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/contracts/watchReadContracts.ts\r\nfunction watchReadContracts(config, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => callback(await readContracts(config));\r\n  const unwatch = config.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\r\n  const unsubscribe = client2.subscribe(({ provider }) => provider, handleChange);\r\n  return () => {\r\n    unsubscribe();\r\n    unwatch?.();\r\n  };\r\n}\r\n\r\n// src/actions/transactions/fetchTransaction.ts\r\nasync function fetchTransaction({\r\n  chainId,\r\n  hash\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  return provider.getTransaction(hash);\r\n}\r\n\r\n// src/actions/transactions/prepareSendTransaction.ts\r\nimport { isAddress as isAddress2 } from \"ethers/lib/utils.js\";\r\n\r\n// src/actions/ens/fetchEnsAddress.ts\r\nimport { getAddress } from \"ethers/lib/utils.js\";\r\nasync function fetchEnsAddress({\r\n  chainId,\r\n  name\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const address = await provider.resolveName(name);\r\n  try {\r\n    return address ? getAddress(address) : null;\r\n  } catch (_error) {\r\n    return null;\r\n  }\r\n}\r\n\r\n// src/actions/ens/fetchEnsAvatar.ts\r\nasync function fetchEnsAvatar({\r\n  address,\r\n  chainId\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const avatar = await provider.getAvatar(address);\r\n  return avatar;\r\n}\r\n\r\n// src/actions/ens/fetchEnsName.ts\r\nimport { getAddress as getAddress2 } from \"ethers/lib/utils.js\";\r\nasync function fetchEnsName({\r\n  address,\r\n  chainId\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  return provider.lookupAddress(getAddress2(address));\r\n}\r\n\r\n// src/actions/ens/fetchEnsResolver.ts\r\nasync function fetchEnsResolver({\r\n  chainId,\r\n  name\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const resolver = await provider.getResolver(name);\r\n  return resolver;\r\n}\r\n\r\n// src/actions/transactions/prepareSendTransaction.ts\r\nasync function prepareSendTransaction({\r\n  chainId,\r\n  request,\r\n  signer: signer_\r\n}) {\r\n  const signer = signer_ ?? await fetchSigner({ chainId });\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const [to, gasLimit] = await Promise.all([\r\n    isAddress2(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({ name: request.to }),\r\n    request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)\r\n  ]);\r\n  if (!to)\r\n    throw new Error(\"Could not resolve ENS name\");\r\n  return {\r\n    ...chainId ? { chainId } : {},\r\n    request: { ...request, gasLimit, to },\r\n    mode: \"prepared\"\r\n  };\r\n}\r\n\r\n// src/actions/transactions/sendTransaction.ts\r\nasync function sendTransaction({\r\n  chainId,\r\n  mode,\r\n  request\r\n}) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (mode === \"prepared\") {\r\n    if (!request.gasLimit)\r\n      throw new Error(\"`gasLimit` is required\");\r\n    if (!request.to)\r\n      throw new Error(\"`to` is required\");\r\n  }\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  try {\r\n    const uncheckedSigner = signer.connectUnchecked?.();\r\n    const { hash, wait } = await (uncheckedSigner ?? signer).sendTransaction(\r\n      request\r\n    );\r\n    return { hash, wait };\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/transactions/waitForTransaction.ts\r\nimport { toUtf8String } from \"ethers/lib/utils.js\";\r\n\r\n// src/actions/network-status/fetchFeeData.ts\r\nimport { formatUnits as formatUnits2 } from \"ethers/lib/utils.js\";\r\nasync function fetchFeeData({\r\n  chainId,\r\n  formatUnits: units2 = \"wei\"\r\n} = {}) {\r\n  const provider = getProvider({ chainId });\r\n  const feeData = await provider.getFeeData();\r\n  const formatted = {\r\n    gasPrice: feeData.gasPrice ? formatUnits2(feeData.gasPrice, units2) : null,\r\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits2(feeData.maxFeePerGas, units2) : null,\r\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits2(feeData.maxPriorityFeePerGas, units2) : null\r\n  };\r\n  return { ...feeData, formatted };\r\n}\r\n\r\n// src/actions/transactions/waitForTransaction.ts\r\nasync function waitForTransaction({\r\n  chainId,\r\n  confirmations = 1,\r\n  hash,\r\n  onSpeedUp,\r\n  timeout = 0\r\n}) {\r\n  const provider = getProvider({ chainId });\r\n  const [blockNumber, transaction] = await Promise.all([\r\n    fetchBlockNumber(),\r\n    fetchTransaction({ hash })\r\n  ]);\r\n  let replaceable = null;\r\n  if (confirmations !== 0 && transaction?.to) {\r\n    replaceable = {\r\n      data: transaction.data,\r\n      from: transaction.from,\r\n      nonce: transaction.nonce,\r\n      startBlock: blockNumber,\r\n      to: transaction.to,\r\n      value: transaction.value\r\n    };\r\n  }\r\n  try {\r\n    const receipt = await provider._waitForTransaction(\r\n      hash,\r\n      confirmations,\r\n      timeout,\r\n      replaceable\r\n    );\r\n    if (receipt.status === 0) {\r\n      const code = await provider.call(receipt, receipt.blockNumber);\r\n      const reason = toUtf8String(`0x${code.substring(138)}`);\r\n      throw new Error(reason);\r\n    }\r\n    return receipt;\r\n  } catch (err) {\r\n    if (err?.reason === \"repriced\") {\r\n      onSpeedUp?.(err.replacement);\r\n      return waitForTransaction({\r\n        hash: err.replacement?.hash,\r\n        confirmations,\r\n        timeout\r\n      });\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\n// src/actions/transactions/watchPendingTransactions.ts\r\nimport { shallow as shallow3 } from \"zustand/shallow\";\r\nfunction watchPendingTransactions(args, callback) {\r\n  let previousProvider;\r\n  const createListener = (provider) => {\r\n    if (previousProvider) {\r\n      previousProvider?.off(\"pending\", callback);\r\n    }\r\n    provider.on(\"pending\", callback);\r\n    previousProvider = provider;\r\n  };\r\n  const provider_ = getWebSocketProvider({ chainId: args.chainId }) ?? getProvider({ chainId: args.chainId });\r\n  createListener(provider_);\r\n  const client2 = getClient();\r\n  const unsubscribe = client2.subscribe(\r\n    ({ provider, webSocketProvider }) => ({ provider, webSocketProvider }),\r\n    async ({ provider, webSocketProvider }) => {\r\n      const provider_2 = webSocketProvider ?? provider;\r\n      if (!args.chainId && provider_2) {\r\n        createListener(provider_2);\r\n      }\r\n    },\r\n    {\r\n      equalityFn: shallow3\r\n    }\r\n  );\r\n  return () => {\r\n    unsubscribe();\r\n    provider_?.off(\"pending\", callback);\r\n    previousProvider?.off(\"pending\", callback);\r\n  };\r\n}\r\n\r\n// src/actions/contracts/writeContract.ts\r\nasync function writeContract(config) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  if (config.chainId)\r\n    assertActiveChain({ chainId: config.chainId, signer });\r\n  let request;\r\n  if (config.mode === \"prepared\") {\r\n    request = config.request;\r\n  } else {\r\n    request = (await prepareWriteContract({\r\n      address: config.address,\r\n      args: config.args,\r\n      chainId: config.chainId,\r\n      abi: config.abi,\r\n      functionName: config.functionName,\r\n      overrides: config.overrides\r\n    })).request;\r\n  }\r\n  const transaction = await sendTransaction({\r\n    request,\r\n    mode: \"prepared\"\r\n  });\r\n  return transaction;\r\n}\r\n\r\n// src/actions/accounts/fetchBalance.ts\r\nasync function fetchBalance({\r\n  address,\r\n  chainId,\r\n  formatUnits: unit,\r\n  token\r\n}) {\r\n  const client2 = getClient();\r\n  const provider = getProvider({ chainId });\r\n  if (token) {\r\n    const fetchContractBalance = async ({ abi }) => {\r\n      const erc20Config = { abi, address: token, chainId };\r\n      const [value2, decimals, symbol] = await readContracts({\r\n        allowFailure: false,\r\n        contracts: [\r\n          {\r\n            ...erc20Config,\r\n            functionName: \"balanceOf\",\r\n            args: [address]\r\n          },\r\n          { ...erc20Config, functionName: \"decimals\" },\r\n          { ...erc20Config, functionName: \"symbol\" }\r\n        ]\r\n      });\r\n      return {\r\n        decimals,\r\n        formatted: formatUnits3(value2 ?? \"0\", unit ?? decimals),\r\n        symbol,\r\n        value: value2\r\n      };\r\n    };\r\n    try {\r\n      return await fetchContractBalance({ abi: erc20ABI });\r\n    } catch (err) {\r\n      if (err instanceof ContractResultDecodeError) {\r\n        const { symbol, ...rest } = await fetchContractBalance({\r\n          abi: erc20ABI_bytes32\r\n        });\r\n        return {\r\n          symbol: parseBytes32String2(symbol),\r\n          ...rest\r\n        };\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n  const chains = [...client2.provider.chains || [], ...client2.chains ?? []];\r\n  const value = await provider.getBalance(address);\r\n  const chain = chains.find((x) => x.id === provider.network.chainId);\r\n  return {\r\n    decimals: chain?.nativeCurrency.decimals ?? 18,\r\n    formatted: formatUnits3(value ?? \"0\", unit ?? \"ether\"),\r\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\r\n    value\r\n  };\r\n}\r\n\r\n// src/actions/accounts/fetchSigner.ts\r\nasync function fetchSigner({\r\n  chainId\r\n} = {}) {\r\n  const client2 = getClient();\r\n  const signer = await client2.connector?.getSigner?.({ chainId }) || null;\r\n  return signer;\r\n}\r\n\r\n// src/actions/accounts/getAccount.ts\r\nfunction getAccount() {\r\n  const { data, connector, status } = getClient();\r\n  switch (status) {\r\n    case \"connected\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: true,\r\n        isConnecting: false,\r\n        isDisconnected: false,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n    case \"reconnecting\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: !!data?.account,\r\n        isConnecting: false,\r\n        isDisconnected: false,\r\n        isReconnecting: true,\r\n        status\r\n      };\r\n    case \"connecting\":\r\n      return {\r\n        address: data?.account,\r\n        connector,\r\n        isConnected: false,\r\n        isConnecting: true,\r\n        isDisconnected: false,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n    case \"disconnected\":\r\n      return {\r\n        address: void 0,\r\n        connector: void 0,\r\n        isConnected: false,\r\n        isConnecting: false,\r\n        isDisconnected: true,\r\n        isReconnecting: false,\r\n        status\r\n      };\r\n  }\r\n}\r\n\r\n// src/actions/accounts/getNetwork.ts\r\nfunction getNetwork() {\r\n  const client2 = getClient();\r\n  const chainId = client2.data?.chain?.id;\r\n  const activeChains = client2.chains ?? [];\r\n  const activeChain = [...client2.provider.chains || [], ...activeChains].find(\r\n    (x) => x.id === chainId\r\n  ) ?? {\r\n    id: chainId,\r\n    name: `Chain ${chainId}`,\r\n    network: `${chainId}`,\r\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\r\n    rpcUrls: {\r\n      default: { http: [\"\"] },\r\n      public: { http: [\"\"] }\r\n    }\r\n  };\r\n  return {\r\n    chain: chainId ? {\r\n      ...activeChain,\r\n      ...client2.data?.chain,\r\n      id: chainId\r\n    } : void 0,\r\n    chains: activeChains\r\n  };\r\n}\r\n\r\n// src/actions/accounts/signMessage.ts\r\nasync function signMessage(args) {\r\n  try {\r\n    const signer = await fetchSigner();\r\n    if (!signer)\r\n      throw new ConnectorNotFoundError();\r\n    return await signer.signMessage(\r\n      args.message\r\n    );\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/signTypedData.ts\r\nasync function signTypedData({\r\n  domain,\r\n  types,\r\n  value\r\n}) {\r\n  const signer = await fetchSigner();\r\n  if (!signer)\r\n    throw new ConnectorNotFoundError();\r\n  const { chainId: chainId_ } = domain;\r\n  const chainId = chainId_ ? normalizeChainId(chainId_) : void 0;\r\n  if (chainId)\r\n    assertActiveChain({ chainId, signer });\r\n  const types_ = Object.entries(types).filter(([key]) => key !== \"EIP712Domain\").reduce((types2, [key, attributes]) => {\r\n    types2[key] = attributes.filter((attr) => attr.type !== \"EIP712Domain\");\r\n    return types2;\r\n  }, {});\r\n  try {\r\n    return await signer._signTypedData(domain, types_, value);\r\n  } catch (error) {\r\n    if (error.code === 4001 || error.code === \"ACTION_REJECTED\")\r\n      throw new UserRejectedRequestError(error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// src/actions/accounts/switchNetwork.ts\r\nasync function switchNetwork({\r\n  chainId\r\n}) {\r\n  const { connector } = getClient();\r\n  if (!connector)\r\n    throw new ConnectorNotFoundError();\r\n  if (!connector.switchChain)\r\n    throw new SwitchChainNotSupportedError({\r\n      connector\r\n    });\r\n  return connector.switchChain(chainId);\r\n}\r\n\r\n// src/actions/accounts/watchAccount.ts\r\nimport { shallow as shallow4 } from \"zustand/shallow\";\r\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\r\n  const client2 = getClient();\r\n  const handleChange = () => callback(getAccount());\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, connector, status }) => selector({\r\n      address: data?.account,\r\n      connector,\r\n      status\r\n    }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow4\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/accounts/watchNetwork.ts\r\nimport { shallow as shallow5 } from \"zustand/shallow\";\r\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\r\n  const client2 = getClient();\r\n  const handleChange = () => callback(getNetwork());\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow5\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/actions/accounts/watchSigner.ts\r\nimport { shallow as shallow6 } from \"zustand/shallow\";\r\nfunction watchSigner({ chainId }, callback) {\r\n  const client2 = getClient();\r\n  const handleChange = async () => {\r\n    const signer = await fetchSigner({ chainId });\r\n    if (!getClient().connector)\r\n      return callback(null);\r\n    return callback(signer);\r\n  };\r\n  const unsubscribe = client2.subscribe(\r\n    ({ data, connector }) => ({\r\n      account: data?.account,\r\n      chainId: data?.chain?.id,\r\n      connector\r\n    }),\r\n    handleChange,\r\n    {\r\n      equalityFn: shallow6\r\n    }\r\n  );\r\n  return unsubscribe;\r\n}\r\n\r\n// src/errors.ts\r\nvar RpcError = class extends Error {\r\n  constructor(message, options) {\r\n    const { cause, code, data } = options;\r\n    if (!Number.isInteger(code))\r\n      throw new Error('\"code\" must be an integer.');\r\n    if (!message || typeof message !== \"string\")\r\n      throw new Error('\"message\" must be a nonempty string.');\r\n    super(message);\r\n    this.cause = cause;\r\n    this.code = code;\r\n    this.data = data;\r\n  }\r\n};\r\nvar ProviderRpcError = class extends RpcError {\r\n  constructor(message, options) {\r\n    const { cause, code, data } = options;\r\n    if (!(Number.isInteger(code) && code >= 1e3 && code <= 4999))\r\n      throw new Error(\r\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\r\n      );\r\n    super(message, { cause, code, data });\r\n  }\r\n};\r\nvar AddChainError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"AddChainError\";\r\n    this.message = \"Error adding chain\";\r\n  }\r\n};\r\nvar ChainDoesNotSupportMulticallError = class extends Error {\r\n  constructor({ blockNumber, chain }) {\r\n    super(\r\n      `Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : \"\"}.`\r\n    );\r\n    this.name = \"ChainDoesNotSupportMulticall\";\r\n  }\r\n};\r\nvar ChainMismatchError = class extends Error {\r\n  constructor({\r\n    activeChain,\r\n    targetChain\r\n  }) {\r\n    super(\r\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\r\n    );\r\n    this.name = \"ChainMismatchError\";\r\n  }\r\n};\r\nvar ChainNotConfiguredError = class extends Error {\r\n  constructor({\r\n    chainId,\r\n    connectorId\r\n  }) {\r\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\r\n    this.name = \"ChainNotConfigured\";\r\n  }\r\n};\r\nvar ConnectorAlreadyConnectedError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ConnectorAlreadyConnectedError\";\r\n    this.message = \"Connector already connected\";\r\n  }\r\n};\r\nvar ConnectorNotFoundError = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ConnectorNotFoundError\";\r\n    this.message = \"Connector not found\";\r\n  }\r\n};\r\nvar ContractMethodDoesNotExistError = class extends Error {\r\n  constructor({\r\n    address,\r\n    chainId,\r\n    functionName\r\n  }) {\r\n    const { chains, network } = getProvider();\r\n    const chain = chains?.find(({ id }) => id === (chainId || network.chainId));\r\n    const blockExplorer = chain?.blockExplorers?.default;\r\n    super(\r\n      [\r\n        `Function \"${functionName}\" on contract \"${address}\" does not exist.`,\r\n        ...blockExplorer ? [\r\n          \"\",\r\n          `${blockExplorer?.name}: ${blockExplorer?.url}/address/${address}#readContract`\r\n        ] : []\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodDoesNotExistError\";\r\n  }\r\n};\r\nvar ContractMethodNoResultError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName\r\n  }) {\r\n    super(\r\n      [\r\n        \"Contract read returned an empty response. This could be due to any of the following:\",\r\n        `- The contract does not have the function \"${functionName}\",`,\r\n        \"- The parameters passed to the contract function may be invalid, or\",\r\n        \"- The address is not a contract.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        )\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodNoResultError\";\r\n  }\r\n};\r\nvar ContractMethodRevertedError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName,\r\n    errorMessage\r\n  }) {\r\n    super(\r\n      [\r\n        \"Contract method reverted with an error.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        ),\r\n        \"\",\r\n        `Details: ${errorMessage}`\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractMethodRevertedError\";\r\n  }\r\n};\r\nvar ContractResultDecodeError = class extends Error {\r\n  constructor({\r\n    address,\r\n    args,\r\n    chainId,\r\n    functionName,\r\n    errorMessage\r\n  }) {\r\n    super(\r\n      [\r\n        \"Failed to decode contract function result.\",\r\n        \"\",\r\n        `Config:`,\r\n        JSON.stringify(\r\n          {\r\n            address,\r\n            abi: \"...\",\r\n            functionName,\r\n            chainId,\r\n            args\r\n          },\r\n          null,\r\n          2\r\n        ),\r\n        \"\",\r\n        `Details: ${errorMessage}`\r\n      ].join(\"\\n\")\r\n    );\r\n    this.name = \"ContractResultDecodeError\";\r\n  }\r\n};\r\nvar ProviderChainsNotFound = class extends Error {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.name = \"ProviderChainsNotFound\";\r\n    this.message = [\r\n      \"No chains were found on the wagmi provider. Some functions that require a chain may not work.\",\r\n      \"\",\r\n      \"It is recommended to add a list of chains to the provider in `createClient`.\",\r\n      \"\",\r\n      \"Example:\",\r\n      \"\",\r\n      \"```\",\r\n      \"import { getDefaultProvider } from 'ethers'\",\r\n      \"import { chain, createClient } from 'wagmi'\",\r\n      \"\",\r\n      \"createClient({\",\r\n      \"  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })\",\r\n      \"})\",\r\n      \"```\"\r\n    ].join(\"\\n\");\r\n  }\r\n};\r\nvar ResourceUnavailableError = class extends RpcError {\r\n  constructor(cause) {\r\n    super(\"Resource unavailable\", { cause, code: -32002 });\r\n    this.name = \"ResourceUnavailable\";\r\n  }\r\n};\r\nvar SwitchChainError = class extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"Error switching chain\", { cause, code: 4902 });\r\n    this.name = \"SwitchChainError\";\r\n  }\r\n};\r\nvar SwitchChainNotSupportedError = class extends Error {\r\n  constructor({ connector }) {\r\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\r\n    this.name = \"SwitchChainNotSupportedError\";\r\n  }\r\n};\r\nvar UserRejectedRequestError = class extends ProviderRpcError {\r\n  constructor(cause) {\r\n    super(\"User rejected request\", { cause, code: 4001 });\r\n    this.name = \"UserRejectedRequestError\";\r\n  }\r\n};\r\n\r\nexport {\r\n  configureChains,\r\n  RpcError,\r\n  ProviderRpcError,\r\n  AddChainError,\r\n  ChainDoesNotSupportMulticallError,\r\n  ChainMismatchError,\r\n  ChainNotConfiguredError,\r\n  ConnectorAlreadyConnectedError,\r\n  ConnectorNotFoundError,\r\n  ContractMethodDoesNotExistError,\r\n  ContractMethodNoResultError,\r\n  ContractMethodRevertedError,\r\n  ContractResultDecodeError,\r\n  ProviderChainsNotFound,\r\n  ResourceUnavailableError,\r\n  SwitchChainError,\r\n  SwitchChainNotSupportedError,\r\n  UserRejectedRequestError,\r\n  debounce,\r\n  deepEqual,\r\n  deserialize,\r\n  minimizeContractInterface,\r\n  normalizeChainId,\r\n  parseContractResult,\r\n  serialize,\r\n  noopStorage,\r\n  createStorage,\r\n  Client,\r\n  createClient,\r\n  getClient,\r\n  connect,\r\n  disconnect,\r\n  erc20ABI,\r\n  erc721ABI,\r\n  erc4626ABI,\r\n  units,\r\n  fetchToken,\r\n  getContract,\r\n  prepareWriteContract,\r\n  getProvider,\r\n  getWebSocketProvider,\r\n  watchProvider,\r\n  watchWebSocketProvider,\r\n  multicall,\r\n  readContract,\r\n  readContracts,\r\n  watchContractEvent,\r\n  fetchBlockNumber,\r\n  watchBlockNumber,\r\n  watchMulticall,\r\n  watchReadContract,\r\n  watchReadContracts,\r\n  fetchTransaction,\r\n  fetchEnsAddress,\r\n  fetchEnsAvatar,\r\n  fetchEnsName,\r\n  fetchEnsResolver,\r\n  prepareSendTransaction,\r\n  sendTransaction,\r\n  fetchFeeData,\r\n  waitForTransaction,\r\n  watchPendingTransactions,\r\n  writeContract,\r\n  fetchBalance,\r\n  fetchSigner,\r\n  getAccount,\r\n  getNetwork,\r\n  signMessage,\r\n  signTypedData,\r\n  switchNetwork,\r\n  watchAccount,\r\n  watchNetwork,\r\n  watchSigner\r\n};\r\n", "const reduxImpl = (reducer, initial) => (set, _get, api) => {\r\n  api.dispatch = (action) => {\r\n    set((state) => reducer(state, action), false, action);\r\n    return action;\r\n  };\r\n  api.dispatchFromDevtools = true;\r\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\r\n};\r\nconst redux = reduxImpl;\r\n\r\nconst trackedConnections = /* @__PURE__ */ new Map();\r\nconst getTrackedConnectionState = (name) => {\r\n  const api = trackedConnections.get(name);\r\n  if (!api)\r\n    return {};\r\n  return Object.fromEntries(\r\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\r\n  );\r\n};\r\nconst extractConnectionInformation = (store, extensionConnector, options) => {\r\n  if (store === void 0) {\r\n    return {\r\n      type: \"untracked\",\r\n      connection: extensionConnector.connect(options)\r\n    };\r\n  }\r\n  const existingConnection = trackedConnections.get(options.name);\r\n  if (existingConnection) {\r\n    return { type: \"tracked\", store, ...existingConnection };\r\n  }\r\n  const newConnection = {\r\n    connection: extensionConnector.connect(options),\r\n    stores: {}\r\n  };\r\n  trackedConnections.set(options.name, newConnection);\r\n  return { type: \"tracked\", store, ...newConnection };\r\n};\r\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\r\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\r\n  let extensionConnector;\r\n  try {\r\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\r\n  } catch (e) {\r\n  }\r\n  if (!extensionConnector) {\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\r\n      console.warn(\r\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\r\n      );\r\n    }\r\n    return fn(set, get, api);\r\n  }\r\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\r\n  let isRecording = true;\r\n  api.setState = (state, replace, nameOrAction) => {\r\n    const r = set(state, replace);\r\n    if (!isRecording)\r\n      return r;\r\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\r\n    if (store === void 0) {\r\n      connection == null ? void 0 : connection.send(action, get());\r\n      return r;\r\n    }\r\n    connection == null ? void 0 : connection.send(\r\n      {\r\n        ...action,\r\n        type: `${store}/${action.type}`\r\n      },\r\n      {\r\n        ...getTrackedConnectionState(options.name),\r\n        [store]: api.getState()\r\n      }\r\n    );\r\n    return r;\r\n  };\r\n  const setStateFromDevtools = (...a) => {\r\n    const originalIsRecording = isRecording;\r\n    isRecording = false;\r\n    set(...a);\r\n    isRecording = originalIsRecording;\r\n  };\r\n  const initialState = fn(api.setState, get, api);\r\n  if (connectionInformation.type === \"untracked\") {\r\n    connection == null ? void 0 : connection.init(initialState);\r\n  } else {\r\n    connectionInformation.stores[connectionInformation.store] = api;\r\n    connection == null ? void 0 : connection.init(\r\n      Object.fromEntries(\r\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\r\n          key,\r\n          key === connectionInformation.store ? initialState : store2.getState()\r\n        ])\r\n      )\r\n    );\r\n  }\r\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\r\n    let didWarnAboutReservedActionType = false;\r\n    const originalDispatch = api.dispatch;\r\n    api.dispatch = (...a) => {\r\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\r\n        console.warn(\r\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\r\n        );\r\n        didWarnAboutReservedActionType = true;\r\n      }\r\n      originalDispatch(...a);\r\n    };\r\n  }\r\n  connection.subscribe((message) => {\r\n    var _a;\r\n    switch (message.type) {\r\n      case \"ACTION\":\r\n        if (typeof message.payload !== \"string\") {\r\n          console.error(\r\n            \"[zustand devtools middleware] Unsupported action format\"\r\n          );\r\n          return;\r\n        }\r\n        return parseJsonThen(\r\n          message.payload,\r\n          (action) => {\r\n            if (action.type === \"__setState\") {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(action.state);\r\n                return;\r\n              }\r\n              if (Object.keys(action.state).length !== 1) {\r\n                console.error(\r\n                  `\r\n                    [zustand devtools middleware] Unsupported __setState action format. \r\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\r\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\r\n                    `\r\n                );\r\n              }\r\n              const stateFromDevtools = action.state[store];\r\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\r\n                setStateFromDevtools(stateFromDevtools);\r\n              }\r\n              return;\r\n            }\r\n            if (!api.dispatchFromDevtools)\r\n              return;\r\n            if (typeof api.dispatch !== \"function\")\r\n              return;\r\n            api.dispatch(action);\r\n          }\r\n        );\r\n      case \"DISPATCH\":\r\n        switch (message.payload.type) {\r\n          case \"RESET\":\r\n            setStateFromDevtools(initialState);\r\n            if (store === void 0) {\r\n              return connection == null ? void 0 : connection.init(api.getState());\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"COMMIT\":\r\n            if (store === void 0) {\r\n              connection == null ? void 0 : connection.init(api.getState());\r\n              return;\r\n            }\r\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n          case \"ROLLBACK\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                connection == null ? void 0 : connection.init(api.getState());\r\n                return;\r\n              }\r\n              setStateFromDevtools(state[store]);\r\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\r\n            });\r\n          case \"JUMP_TO_STATE\":\r\n          case \"JUMP_TO_ACTION\":\r\n            return parseJsonThen(message.state, (state) => {\r\n              if (store === void 0) {\r\n                setStateFromDevtools(state);\r\n                return;\r\n              }\r\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\r\n                setStateFromDevtools(state[store]);\r\n              }\r\n            });\r\n          case \"IMPORT_STATE\": {\r\n            const { nextLiftedState } = message.payload;\r\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\r\n            if (!lastComputedState)\r\n              return;\r\n            if (store === void 0) {\r\n              setStateFromDevtools(lastComputedState);\r\n            } else {\r\n              setStateFromDevtools(lastComputedState[store]);\r\n            }\r\n            connection == null ? void 0 : connection.send(\r\n              null,\r\n              // FIXME no-any\r\n              nextLiftedState\r\n            );\r\n            return;\r\n          }\r\n          case \"PAUSE_RECORDING\":\r\n            return isRecording = !isRecording;\r\n        }\r\n        return;\r\n    }\r\n  });\r\n  return initialState;\r\n};\r\nconst devtools = devtoolsImpl;\r\nconst parseJsonThen = (stringified, f) => {\r\n  let parsed;\r\n  try {\r\n    parsed = JSON.parse(stringified);\r\n  } catch (e) {\r\n    console.error(\r\n      \"[zustand devtools middleware] Could not parse the received json\",\r\n      e\r\n    );\r\n  }\r\n  if (parsed !== void 0)\r\n    f(parsed);\r\n};\r\n\r\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\r\n  const origSubscribe = api.subscribe;\r\n  api.subscribe = (selector, optListener, options) => {\r\n    let listener = selector;\r\n    if (optListener) {\r\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\r\n      let currentSlice = selector(api.getState());\r\n      listener = (state) => {\r\n        const nextSlice = selector(state);\r\n        if (!equalityFn(currentSlice, nextSlice)) {\r\n          const previousSlice = currentSlice;\r\n          optListener(currentSlice = nextSlice, previousSlice);\r\n        }\r\n      };\r\n      if (options == null ? void 0 : options.fireImmediately) {\r\n        optListener(currentSlice, currentSlice);\r\n      }\r\n    }\r\n    return origSubscribe(listener);\r\n  };\r\n  const initialState = fn(set, get, api);\r\n  return initialState;\r\n};\r\nconst subscribeWithSelector = subscribeWithSelectorImpl;\r\n\r\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\r\n\r\nfunction createJSONStorage(getStorage, options) {\r\n  let storage;\r\n  try {\r\n    storage = getStorage();\r\n  } catch (e) {\r\n    return;\r\n  }\r\n  const persistStorage = {\r\n    getItem: (name) => {\r\n      var _a;\r\n      const parse = (str2) => {\r\n        if (str2 === null) {\r\n          return null;\r\n        }\r\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\r\n      };\r\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\r\n      if (str instanceof Promise) {\r\n        return str.then(parse);\r\n      }\r\n      return parse(str);\r\n    },\r\n    setItem: (name, newValue) => storage.setItem(\r\n      name,\r\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\r\n    ),\r\n    removeItem: (name) => storage.removeItem(name)\r\n  };\r\n  return persistStorage;\r\n}\r\nconst toThenable = (fn) => (input) => {\r\n  try {\r\n    const result = fn(input);\r\n    if (result instanceof Promise) {\r\n      return result;\r\n    }\r\n    return {\r\n      then(onFulfilled) {\r\n        return toThenable(onFulfilled)(result);\r\n      },\r\n      catch(_onRejected) {\r\n        return this;\r\n      }\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      then(_onFulfilled) {\r\n        return this;\r\n      },\r\n      catch(onRejected) {\r\n        return toThenable(onRejected)(e);\r\n      }\r\n    };\r\n  }\r\n};\r\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\r\n  let options = {\r\n    getStorage: () => localStorage,\r\n    serialize: JSON.stringify,\r\n    deserialize: JSON.parse,\r\n    partialize: (state) => state,\r\n    version: 0,\r\n    merge: (persistedState, currentState) => ({\r\n      ...currentState,\r\n      ...persistedState\r\n    }),\r\n    ...baseOptions\r\n  };\r\n  let hasHydrated = false;\r\n  const hydrationListeners = /* @__PURE__ */ new Set();\r\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\r\n  let storage;\r\n  try {\r\n    storage = options.getStorage();\r\n  } catch (e) {\r\n  }\r\n  if (!storage) {\r\n    return config(\r\n      (...args) => {\r\n        console.warn(\r\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\r\n        );\r\n        set(...args);\r\n      },\r\n      get,\r\n      api\r\n    );\r\n  }\r\n  const thenableSerialize = toThenable(options.serialize);\r\n  const setItem = () => {\r\n    const state = options.partialize({ ...get() });\r\n    let errorInSync;\r\n    const thenable = thenableSerialize({ state, version: options.version }).then(\r\n      (serializedValue) => storage.setItem(options.name, serializedValue)\r\n    ).catch((e) => {\r\n      errorInSync = e;\r\n    });\r\n    if (errorInSync) {\r\n      throw errorInSync;\r\n    }\r\n    return thenable;\r\n  };\r\n  const savedSetState = api.setState;\r\n  api.setState = (state, replace) => {\r\n    savedSetState(state, replace);\r\n    void setItem();\r\n  };\r\n  const configResult = config(\r\n    (...args) => {\r\n      set(...args);\r\n      void setItem();\r\n    },\r\n    get,\r\n    api\r\n  );\r\n  let stateFromStorage;\r\n  const hydrate = () => {\r\n    var _a;\r\n    if (!storage)\r\n      return;\r\n    hasHydrated = false;\r\n    hydrationListeners.forEach((cb) => cb(get()));\r\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\r\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\r\n      if (storageValue) {\r\n        return options.deserialize(storageValue);\r\n      }\r\n    }).then((deserializedStorageValue) => {\r\n      if (deserializedStorageValue) {\r\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\r\n          if (options.migrate) {\r\n            return options.migrate(\r\n              deserializedStorageValue.state,\r\n              deserializedStorageValue.version\r\n            );\r\n          }\r\n          console.error(\r\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\r\n          );\r\n        } else {\r\n          return deserializedStorageValue.state;\r\n        }\r\n      }\r\n    }).then((migratedState) => {\r\n      var _a2;\r\n      stateFromStorage = options.merge(\r\n        migratedState,\r\n        (_a2 = get()) != null ? _a2 : configResult\r\n      );\r\n      set(stateFromStorage, true);\r\n      return setItem();\r\n    }).then(() => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\r\n      hasHydrated = true;\r\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\r\n    }).catch((e) => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\r\n    });\r\n  };\r\n  api.persist = {\r\n    setOptions: (newOptions) => {\r\n      options = {\r\n        ...options,\r\n        ...newOptions\r\n      };\r\n      if (newOptions.getStorage) {\r\n        storage = newOptions.getStorage();\r\n      }\r\n    },\r\n    clearStorage: () => {\r\n      storage == null ? void 0 : storage.removeItem(options.name);\r\n    },\r\n    getOptions: () => options,\r\n    rehydrate: () => hydrate(),\r\n    hasHydrated: () => hasHydrated,\r\n    onHydrate: (cb) => {\r\n      hydrationListeners.add(cb);\r\n      return () => {\r\n        hydrationListeners.delete(cb);\r\n      };\r\n    },\r\n    onFinishHydration: (cb) => {\r\n      finishHydrationListeners.add(cb);\r\n      return () => {\r\n        finishHydrationListeners.delete(cb);\r\n      };\r\n    }\r\n  };\r\n  hydrate();\r\n  return stateFromStorage || configResult;\r\n};\r\nconst newImpl = (config, baseOptions) => (set, get, api) => {\r\n  let options = {\r\n    storage: createJSONStorage(() => localStorage),\r\n    partialize: (state) => state,\r\n    version: 0,\r\n    merge: (persistedState, currentState) => ({\r\n      ...currentState,\r\n      ...persistedState\r\n    }),\r\n    ...baseOptions\r\n  };\r\n  let hasHydrated = false;\r\n  const hydrationListeners = /* @__PURE__ */ new Set();\r\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\r\n  let storage = options.storage;\r\n  if (!storage) {\r\n    return config(\r\n      (...args) => {\r\n        console.warn(\r\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\r\n        );\r\n        set(...args);\r\n      },\r\n      get,\r\n      api\r\n    );\r\n  }\r\n  const setItem = () => {\r\n    const state = options.partialize({ ...get() });\r\n    return storage.setItem(options.name, {\r\n      state,\r\n      version: options.version\r\n    });\r\n  };\r\n  const savedSetState = api.setState;\r\n  api.setState = (state, replace) => {\r\n    savedSetState(state, replace);\r\n    void setItem();\r\n  };\r\n  const configResult = config(\r\n    (...args) => {\r\n      set(...args);\r\n      void setItem();\r\n    },\r\n    get,\r\n    api\r\n  );\r\n  let stateFromStorage;\r\n  const hydrate = () => {\r\n    var _a, _b;\r\n    if (!storage)\r\n      return;\r\n    hasHydrated = false;\r\n    hydrationListeners.forEach((cb) => {\r\n      var _a2;\r\n      return cb((_a2 = get()) != null ? _a2 : configResult);\r\n    });\r\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\r\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\r\n      if (deserializedStorageValue) {\r\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\r\n          if (options.migrate) {\r\n            return options.migrate(\r\n              deserializedStorageValue.state,\r\n              deserializedStorageValue.version\r\n            );\r\n          }\r\n          console.error(\r\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\r\n          );\r\n        } else {\r\n          return deserializedStorageValue.state;\r\n        }\r\n      }\r\n    }).then((migratedState) => {\r\n      var _a2;\r\n      stateFromStorage = options.merge(\r\n        migratedState,\r\n        (_a2 = get()) != null ? _a2 : configResult\r\n      );\r\n      set(stateFromStorage, true);\r\n      return setItem();\r\n    }).then(() => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\r\n      stateFromStorage = get();\r\n      hasHydrated = true;\r\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\r\n    }).catch((e) => {\r\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\r\n    });\r\n  };\r\n  api.persist = {\r\n    setOptions: (newOptions) => {\r\n      options = {\r\n        ...options,\r\n        ...newOptions\r\n      };\r\n      if (newOptions.storage) {\r\n        storage = newOptions.storage;\r\n      }\r\n    },\r\n    clearStorage: () => {\r\n      storage == null ? void 0 : storage.removeItem(options.name);\r\n    },\r\n    getOptions: () => options,\r\n    rehydrate: () => hydrate(),\r\n    hasHydrated: () => hasHydrated,\r\n    onHydrate: (cb) => {\r\n      hydrationListeners.add(cb);\r\n      return () => {\r\n        hydrationListeners.delete(cb);\r\n      };\r\n    },\r\n    onFinishHydration: (cb) => {\r\n      finishHydrationListeners.add(cb);\r\n      return () => {\r\n        finishHydrationListeners.delete(cb);\r\n      };\r\n    }\r\n  };\r\n  if (!options.skipHydration) {\r\n    hydrate();\r\n  }\r\n  return stateFromStorage || configResult;\r\n};\r\nconst persistImpl = (config, baseOptions) => {\r\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      console.warn(\r\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\r\n      );\r\n    }\r\n    return oldImpl(config, baseOptions);\r\n  }\r\n  return newImpl(config, baseOptions);\r\n};\r\nconst persist = persistImpl;\r\n\r\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\r\n", "const createStoreImpl = (createState) => {\r\n  let state;\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const setState = (partial, replace) => {\r\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\r\n    if (!Object.is(nextState, state)) {\r\n      const previousState = state;\r\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\r\n      listeners.forEach((listener) => listener(state, previousState));\r\n    }\r\n  };\r\n  const getState = () => state;\r\n  const subscribe = (listener) => {\r\n    listeners.add(listener);\r\n    return () => listeners.delete(listener);\r\n  };\r\n  const destroy = () => {\r\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n      console.warn(\r\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\r\n      );\r\n    }\r\n    listeners.clear();\r\n  };\r\n  const api = { setState, getState, subscribe, destroy };\r\n  state = createState(setState, getState, api);\r\n  return api;\r\n};\r\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\r\nvar vanilla = (createState) => {\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    console.warn(\r\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\r\n    );\r\n  }\r\n  return createStore(createState);\r\n};\r\n\r\nexport { createStore, vanilla as default };\r\n", "function shallow(objA, objB) {\r\n  if (Object.is(objA, objB)) {\r\n    return true;\r\n  }\r\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\r\n    return false;\r\n  }\r\n  if (objA instanceof Map && objB instanceof Map) {\r\n    if (objA.size !== objB.size)\r\n      return false;\r\n    for (const [key, value] of objA) {\r\n      if (!Object.is(value, objB.get(key))) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  if (objA instanceof Set && objB instanceof Set) {\r\n    if (objA.size !== objB.size)\r\n      return false;\r\n    for (const value of objA) {\r\n      if (!objB.has(value)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  const keysA = Object.keys(objA);\r\n  if (keysA.length !== Object.keys(objB).length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nvar shallow$1 = (objA, objB) => {\r\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\r\n    console.warn(\r\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\r\n    );\r\n  }\r\n  return shallow(objA, objB);\r\n};\r\n\r\nexport { shallow$1 as default, shallow };\r\n", "// src/connectors/injected.ts\r\nimport { InjectedConnector } from \"@wagmi/connectors/injected\";\r\n\r\nexport {\r\n  InjectedConnector\r\n};\r\n"],
  "mappings": "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",
  "names": ["EventEmitter", "__privateGet", "__privateAdd", "__privateSet", "EventEmitter", "import_utils", "import_utils", "import_utils", "lib_exports", "_a", "_b", "getAddress2", "isAddress2", "formatUnits2", "formatUnits3", "parseBytes32String2", "import_utils", "__privateAdd", "__privateGet", "__privateSet", "lib_exports"]
}
