import "./chunk-6NK3FEBL.js";
import {
  lib_exports21 as lib_exports
} from "./chunk-WEXNQZKF.js";
import {
  init_shim
} from "./chunk-CP7VGQTR.js";

// node_modules/wagmi/dist/providers/jsonRpc.js
init_shim();

// node_modules/@wagmi/core/dist/providers/jsonRpc.js
init_shim();
function jsonRpcProvider({
  priority,
  rpc,
  stallTimeout,
  static: static_ = true,
  weight
}) {
  return function(chain) {
    const rpcConfig = rpc(chain);
    if (!rpcConfig || rpcConfig.http === "")
      return null;
    return {
      chain: {
        ...chain,
        rpcUrls: {
          ...chain.rpcUrls,
          default: { http: [rpcConfig.http] }
        }
      },
      provider: () => {
        var _a, _b;
        const RpcProvider = static_ ? lib_exports.StaticJsonRpcProvider : lib_exports.JsonRpcProvider;
        const provider = new RpcProvider(rpcConfig.http, {
          ensAddress: (_b = (_a = chain.contracts) == null ? void 0 : _a.ensRegistry) == null ? void 0 : _b.address,
          chainId: chain.id,
          name: chain.network
        });
        return Object.assign(provider, { priority, stallTimeout, weight });
      },
      ...rpcConfig.webSocket && {
        webSocketProvider: () => new lib_exports.WebSocketProvider(
          rpcConfig.webSocket,
          chain.id
        )
      }
    };
  };
}
export {
  jsonRpcProvider
};
//# sourceMappingURL=wagmi_providers_jsonRpc.js.map
